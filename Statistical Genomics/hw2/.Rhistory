record_id = Patient.ID,race = Ethnicity,
insurance = Insurance,sex = Gender,
sensor_70_180 = tir_70_180,sensor_g250 = tir_over_250,
sensor_181_250 = tir_over_180 - tir_over_250)
# Re-level factors
adult$race <- as.factor(adult$race)
levels(adult$race) <-
c("Non-white","Non-white","White","White","Non-white","Non-white",
"Non-white","More Than One Race","More Than One Race",
"Unknown / Not Reported")
adult$race <- as.character(adult$race)
adult$insurance <- as.factor(adult$insurance)
levels(adult$insurance) <- c("Other","Public","Private")
adult$insurance <- as.character(adult$insurance)
# Select columns
vars <- c("record_id","cohort","timepoint","days_from_start","age",
"sex","race","insurance","hba1c_baseline","hba1c","gmi",
"bg_checks","time_am","time_mm","sensor_wear","sensor_mean",
"sensor_sd","sensor_70_180","sensor_181_250",
"sensor_g250","amexits","amexit_hyper","amexit_manual",
"amexits_day","amexits_other")
adult <- adult %>%
select(all_of(vars))
# Cari's data
source("C:/Users/timbv/Documents/GitHub/BDC-Code/Cari Berget/670G Combined/data_clean.r")
# Exclude non-670G and those who never started
data <- data[as.numeric(as.character(data$record_id)) < 116,]
never_started <- data %>% group_by(record_id) %>%
filter(gyl_timepoint.factor == "Baseline",is.na(automode_start)) %>% .$record_id
data <- data[!(data$record_id %in% never_started),]
# Format
data$cohort <- "Peds"
data$timepoint =
as.character(factor(data$gyl_timepoint,levels = 0:5,
labels = c("Baseline","M1","M3","M6","M9","M12")))
levels(data$demographics_sex.factor) = c("F","M")
# Age
data$age <- as.numeric(difftime(as.Date(data$automode_start,"%m/%d/%Y"),
as.Date(data$demographics_dob,"%m/%d/%Y"),
units = "days"))/365.25
# Baseline A1c
data <- data %>% filter(!is.na(timepoint)) %>% group_by(record_id) %>%
mutate(hba1c_baseline = hba1c[timepoint == "Baseline"],
age = age[timepoint == "Baseline"]) %>% ungroup()
# Make, fill down and select columns
data <- data %>%
fill(demographics_dob,demographics_insurance.factor,
demographics_sex.factor,demographics_race.factor,
automode_start) %>%
mutate(race = demographics_race.factor,
sex = as.character(demographics_sex.factor),
insurance = demographics_insurance.factor,
amexit_hyper = amexit_hyper / amexits,
amexit_manual = amexit_manual / amexits,
amexits_other = amexits_other / amexits,
gmi = 3.31 + (sensor_mean * 0.02392),
days_from_start =
as.numeric(difftime(as.Date(date_visit,"%m/%d/%Y"),
as.Date(automode_start,"%m/%d/%Y"),
units = "days"))) %>%
select(all_of(vars))
# Remove rows with no pump data
pdf_start <- which(colnames(data)=="time_am")
remove_rows <- which(rowSums(is.na(data[,pdf_start:(pdf_start+9)]))==10)
# One data frame
df = rbind(adult,data)
factor_vars = c("record_id","sex","race","insurance","cohort")
df[,factor_vars] <- lapply(df[,factor_vars], as.factor)
# Order timepoints
df$timepoint <- factor(df$timepoint,levels = c("Baseline","M1","M3","M6","M9","M12"))
# Create age and a1c groups
df$age_group <- cut(df$age,breaks = c(0,18,26,50,Inf),right = F)
levels(df$age_group) <- c("Pediatric","Young Adult","Adult","Older Adult")
df$hba1c_group <- cut(df$hba1c_baseline,breaks = c(0,7,8,Inf))
levels(df$hba1c_group) <- c("<= 7%","7% - 8.9%",">= 9%")
skim(df)
df == Inf
demographics <- df %>% group_by(record_id) %>% filter(row_number()==1)
# Table 1
t1 <- tableby(cohort ~ hba1c_baseline + hba1c_group + age + age_group + sex +
race + insurance,data = demographics)
# Print
summary(t1,pfootnote = T,
labelTranslations = list(age = "Age (years) at HCL Start",
age_group = "Age Group at HCL Start",
sex = "Sex",race = "Race",
insurance = "Insurance",
hba1c_baseline = "HbA1c (%) at Baseline"))
# Print
summary(t1,pfootnote = T,labelTranslations =
list(age = "Age (years) at HCL Start",
age_group = "Age Group at HCL Start",
sex = "Sex",race = "Race",
insurance = "Insurance",
hba1c_baseline = "HbA1c (%) at Baseline",
hba1c_group = "HbA1c Group"))
# Kaan's data
# Read in
adult_demographics <-
read.csv("./Data_Cleaned/adult_demographics.csv",
na.strings = na_strings,stringsAsFactors = F)
View(adult_demographics)
adult <-
read.csv("./Data_Cleaned/670Excel.csv",na.strings = na_strings,
stringsAsFactors = F)
adult_2 <- read.csv("./Data_Cleaned/Data set 670 Master.csv",
na.strings = na_strings,stringsAsFactors = F)
View(adult_2)
na_strings <- c("","999","-999","NULL"," ")
# Kaan's data
# Read in
adult_demographics <-
read.csv("./Data_Cleaned/adult_demographics.csv",
na.strings = na_strings,stringsAsFactors = F)
adult <-
read.csv("./Data_Cleaned/670Excel.csv",na.strings = na_strings,
stringsAsFactors = F)
adult_2 <- read.csv("./Data_Cleaned/Data set 670 Master.csv",
na.strings = na_strings,stringsAsFactors = F)
adult_new <- read.csv("./Data_Cleaned/670Excel.new55patients.csv",
na.strings = na_strings,stringsAsFactors = F)
adult_pump <- read.csv("./Data_Cleaned/pdf_summary.csv",
na.strings = na_strings,stringsAsFactors = F)
# Format and combine
adult <- adult %>% select(Patient.ID,start.date,contains("HbA1C"))
adult_2 <- adult_2 %>%
select(Patient.ID,start.date,Ethnicity,Insurance,contains("HbA1C"))
adult <- full_join(adult,adult_2)
adult_new <- adult_new %>%
select(Patient.ID,start.date,Ethnicity,Insurance,contains("HbA1C"))
adult <- full_join(adult,adult_new)
adult <- adult %>% select(Patient.ID,start.date,Ethnicity,Insurance,
HbA1C.Baseline,everything())
# Get demographic data
adult <- adult %>% filter(!is.na(HbA1C.Baseline))
adult <- left_join(adult,adult_demographics,by = "Patient.ID")
adult$age <-
as.numeric(difftime(as.Date(adult$start.date,format = "%m/%d/%Y"),
as.Date(adult$DOB,format = "%m/%d/%Y"),
units = "days")/365.25)
# Get pdf data
adult$last_name <- tolower(sapply(strsplit(adult$LastName," "),"[[",1))
adult$first_name <- tolower(sapply(strsplit(adult$FirstName," "),"[[",1))
adult <- adult %>%
pivot_longer(cols = contains("HbA1C"),
names_to = c(".value","timepoint"),
names_sep = "\\.")
adult <- left_join(adult,adult_pump,
by = c("last_name", "first_name", "timepoint"))
adult <- adult %>% group_by(Patient.ID) %>%
mutate(hba1c_baseline = HbA1C[timepoint == "Baseline"],
days_from_start =
as.numeric(difftime(as.Date(cgm_start,format = "%Y-%m-%d"),
as.Date(start.date,format = "%m/%d/%Y"),
units = "days"))) %>% ungroup()
# Delete rows without PDF information
pdf_start <- which(colnames(adult)=="days_worn")
remove_rows <-
which(rowSums(is.na(adult[,pdf_start:(pdf_start+19)]))==20 &
adult$timepoint != "Baseline")
adult <- adult[-c(remove_rows),]
# Combine am exit columns to match Cari's
adult$amexits =
rowSums(adult[,c(which(colnames(adult) == "no_calib_exit"):
which(colnames(adult) == "other_exit"))])
adult <- adult %>%
mutate(time_am = am_use,time_mm = manual,sensor_mean = avg_sensor,
sensor_sd = sd_sensor,gmi = 3.31 + (sensor_mean * 0.02392),
amexit_hyper = high_sg_exit/amexits,
amexit_manual = user_disabled_exit/amexits,
amexits_other = other_exit/amexits,
amexits_day = amexits / days_worn,
cohort = "Adult",hba1c = HbA1C,
record_id = Patient.ID,race = Ethnicity,
insurance = Insurance,sex = Gender,
sensor_70_180 = tir_70_180,sensor_g250 = tir_over_250,
sensor_181_250 = tir_over_180 - tir_over_250)
# Re-level factors
adult$race <- as.factor(adult$race)
levels(adult$race) <-
c("Non-white","Non-white","White","White","Non-white","Non-white",
"Non-white","More Than One Race","More Than One Race",
"Unknown / Not Reported")
adult$race <- as.character(adult$race)
adult$insurance <- as.factor(adult$insurance)
adult$insurance
na_strings <- c("","999","-999","NULL"," ")
# Kaan's data
# Read in
adult_demographics <-
read.csv("./Data_Cleaned/adult_demographics.csv",
na.strings = na_strings,stringsAsFactors = F)
adult <-
read.csv("./Data_Cleaned/670Excel.csv",na.strings = na_strings,
stringsAsFactors = F)
adult_2 <- read.csv("./Data_Cleaned/Data set 670 Master.csv",
na.strings = na_strings,stringsAsFactors = F)
adult_new <- read.csv("./Data_Cleaned/670Excel.new55patients.csv",
na.strings = na_strings,stringsAsFactors = F)
adult_pump <- read.csv("./Data_Cleaned/pdf_summary.csv",
na.strings = na_strings,stringsAsFactors = F)
# Format and combine
adult <- adult %>% select(Patient.ID,start.date,contains("HbA1C"))
adult_2 <- adult_2 %>%
select(Patient.ID,start.date,Ethnicity,Insurance,contains("HbA1C"))
adult <- full_join(adult,adult_2)
adult_new <- adult_new %>%
select(Patient.ID,start.date,Ethnicity,Insurance,contains("HbA1C"))
adult <- full_join(adult,adult_new)
adult <- adult %>% select(Patient.ID,start.date,Ethnicity,Insurance,
HbA1C.Baseline,everything())
# Get demographic data
adult <- adult %>% filter(!is.na(HbA1C.Baseline))
adult <- left_join(adult,adult_demographics,by = "Patient.ID")
adult$age <-
as.numeric(difftime(as.Date(adult$start.date,format = "%m/%d/%Y"),
as.Date(adult$DOB,format = "%m/%d/%Y"),
units = "days")/365.25)
# Get pdf data
adult$last_name <- tolower(sapply(strsplit(adult$LastName," "),"[[",1))
adult$first_name <- tolower(sapply(strsplit(adult$FirstName," "),"[[",1))
adult <- adult %>%
pivot_longer(cols = contains("HbA1C"),
names_to = c(".value","timepoint"),
names_sep = "\\.")
adult <- left_join(adult,adult_pump,
by = c("last_name", "first_name", "timepoint"))
adult <- adult %>% group_by(Patient.ID) %>%
mutate(hba1c_baseline = HbA1C[timepoint == "Baseline"],
days_from_start =
as.numeric(difftime(as.Date(cgm_start,format = "%Y-%m-%d"),
as.Date(start.date,format = "%m/%d/%Y"),
units = "days"))) %>% ungroup()
# Delete rows without PDF information
pdf_start <- which(colnames(adult)=="days_worn")
remove_rows <-
which(rowSums(is.na(adult[,pdf_start:(pdf_start+19)]))==20 &
adult$timepoint != "Baseline")
adult <- adult[-c(remove_rows),]
# Combine am exit columns to match Cari's
adult$amexits =
rowSums(adult[,c(which(colnames(adult) == "no_calib_exit"):
which(colnames(adult) == "other_exit"))])
adult <- adult %>%
mutate(time_am = am_use,time_mm = manual,sensor_mean = avg_sensor,
sensor_sd = sd_sensor,gmi = 3.31 + (sensor_mean * 0.02392),
amexit_hyper = high_sg_exit/amexits,
amexit_manual = user_disabled_exit/amexits,
amexits_other = other_exit/amexits,
amexits_day = amexits / days_worn,
cohort = "Adult",hba1c = HbA1C,
record_id = Patient.ID,race = Ethnicity,
insurance = Insurance,sex = Gender,
sensor_70_180 = tir_70_180,sensor_g250 = tir_over_250,
sensor_181_250 = tir_over_180 - tir_over_250)
# Re-level factors
adult$race <- as.factor(adult$race)
levels(adult$race) <-
c("Non-white","Non-white","White","White","Non-white","Non-white",
"Non-white","More Than One Race","More Than One Race",
"Unknown / Not Reported")
adult$race <- as.character(adult$race)
adult$insurance <- as.factor(adult$insurance)
levels(adult$insurance)
levels(adult$insurance) <- c("Public","Private")
na_strings <- c("","999","-999","NULL"," ")
# Kaan's data
# Read in
adult_demographics <-
read.csv("./Data_Cleaned/adult_demographics.csv",
na.strings = na_strings,stringsAsFactors = F)
adult <-
read.csv("./Data_Cleaned/670Excel.csv",na.strings = na_strings,
stringsAsFactors = F)
adult_2 <- read.csv("./Data_Cleaned/Data set 670 Master.csv",
na.strings = na_strings,stringsAsFactors = F)
adult_new <- read.csv("./Data_Cleaned/670Excel.new55patients.csv",
na.strings = na_strings,stringsAsFactors = F)
adult_pump <- read.csv("./Data_Cleaned/pdf_summary.csv",
na.strings = na_strings,stringsAsFactors = F)
# Format and combine
adult <- adult %>% select(Patient.ID,start.date,contains("HbA1C"))
adult_2 <- adult_2 %>%
select(Patient.ID,start.date,Ethnicity,Insurance,contains("HbA1C"))
adult <- full_join(adult,adult_2)
adult_new <- adult_new %>%
select(Patient.ID,start.date,Ethnicity,Insurance,contains("HbA1C"))
adult <- full_join(adult,adult_new)
adult <- adult %>% select(Patient.ID,start.date,Ethnicity,Insurance,
HbA1C.Baseline,everything())
# Get demographic data
adult <- adult %>% filter(!is.na(HbA1C.Baseline))
adult <- left_join(adult,adult_demographics,by = "Patient.ID")
adult$age <-
as.numeric(difftime(as.Date(adult$start.date,format = "%m/%d/%Y"),
as.Date(adult$DOB,format = "%m/%d/%Y"),
units = "days")/365.25)
# Get pdf data
adult$last_name <- tolower(sapply(strsplit(adult$LastName," "),"[[",1))
adult$first_name <- tolower(sapply(strsplit(adult$FirstName," "),"[[",1))
adult <- adult %>%
pivot_longer(cols = contains("HbA1C"),
names_to = c(".value","timepoint"),
names_sep = "\\.")
adult <- left_join(adult,adult_pump,
by = c("last_name", "first_name", "timepoint"))
adult <- adult %>% group_by(Patient.ID) %>%
mutate(hba1c_baseline = HbA1C[timepoint == "Baseline"],
days_from_start =
as.numeric(difftime(as.Date(cgm_start,format = "%Y-%m-%d"),
as.Date(start.date,format = "%m/%d/%Y"),
units = "days"))) %>% ungroup()
# Delete rows without PDF information
pdf_start <- which(colnames(adult)=="days_worn")
remove_rows <-
which(rowSums(is.na(adult[,pdf_start:(pdf_start+19)]))==20 &
adult$timepoint != "Baseline")
adult <- adult[-c(remove_rows),]
# Combine am exit columns to match Cari's
adult$amexits =
rowSums(adult[,c(which(colnames(adult) == "no_calib_exit"):
which(colnames(adult) == "other_exit"))])
adult <- adult %>%
mutate(time_am = am_use,time_mm = manual,sensor_mean = avg_sensor,
sensor_sd = sd_sensor,gmi = 3.31 + (sensor_mean * 0.02392),
amexit_hyper = high_sg_exit/amexits,
amexit_manual = user_disabled_exit/amexits,
amexits_other = other_exit/amexits,
amexits_day = amexits / days_worn,
cohort = "Adult",hba1c = HbA1C,
record_id = Patient.ID,race = Ethnicity,
insurance = Insurance,sex = Gender,
sensor_70_180 = tir_70_180,sensor_g250 = tir_over_250,
sensor_181_250 = tir_over_180 - tir_over_250)
# Re-level factors
adult$race <- as.factor(adult$race)
levels(adult$race) <-
c("Non-white","Non-white","White","White","Non-white","Non-white",
"Non-white","More Than One Race","More Than One Race",
"Unknown / Not Reported")
adult$race <- as.character(adult$race)
adult$insurance <- as.factor(adult$insurance)
levels(adult$insurance) <- c("Public","Private")
adult$insurance <- as.character(adult$insurance)
# Select columns
vars <- c("record_id","cohort","timepoint","days_from_start","age",
"sex","race","insurance","hba1c_baseline","hba1c","gmi",
"bg_checks","time_am","time_mm","sensor_wear","sensor_mean",
"sensor_sd","sensor_70_180","sensor_181_250",
"sensor_g250","amexits","amexit_hyper","amexit_manual",
"amexits_day","amexits_other")
adult <- adult %>%
select(all_of(vars))
# Cari's data
source("C:/Users/timbv/Documents/GitHub/BDC-Code/Cari Berget/670G Combined/data_clean.r")
# Exclude non-670G and those who never started
data <- data[as.numeric(as.character(data$record_id)) < 116,]
never_started <- data %>% group_by(record_id) %>%
filter(gyl_timepoint.factor == "Baseline",is.na(automode_start)) %>% .$record_id
data <- data[!(data$record_id %in% never_started),]
# Format
data$cohort <- "Peds"
data$timepoint =
as.character(factor(data$gyl_timepoint,levels = 0:5,
labels = c("Baseline","M1","M3","M6","M9","M12")))
levels(data$demographics_sex.factor) = c("F","M")
# Age
data$age <- as.numeric(difftime(as.Date(data$automode_start,"%m/%d/%Y"),
as.Date(data$demographics_dob,"%m/%d/%Y"),
units = "days"))/365.25
# Baseline A1c
data <- data %>% filter(!is.na(timepoint)) %>% group_by(record_id) %>%
mutate(hba1c_baseline = hba1c[timepoint == "Baseline"],
age = age[timepoint == "Baseline"]) %>% ungroup()
# Make, fill down and select columns
data <- data %>%
fill(demographics_dob,demographics_insurance.factor,
demographics_sex.factor,demographics_race.factor,
automode_start) %>%
mutate(race = demographics_race.factor,
sex = as.character(demographics_sex.factor),
insurance = demographics_insurance.factor,
amexit_hyper = amexit_hyper / amexits,
amexit_manual = amexit_manual / amexits,
amexits_other = amexits_other / amexits,
gmi = 3.31 + (sensor_mean * 0.02392),
days_from_start =
as.numeric(difftime(as.Date(date_visit,"%m/%d/%Y"),
as.Date(automode_start,"%m/%d/%Y"),
units = "days"))) %>%
select(all_of(vars))
# Remove rows with no pump data
pdf_start <- which(colnames(data)=="time_am")
remove_rows <- which(rowSums(is.na(data[,pdf_start:(pdf_start+9)]))==10)
# One data frame
df = rbind(adult,data)
factor_vars = c("record_id","sex","race","insurance","cohort")
df[,factor_vars] <- lapply(df[,factor_vars], as.factor)
# Order timepoints
df$timepoint <- factor(df$timepoint,levels = c("Baseline","M1","M3","M6","M9","M12"))
# Create age and a1c groups
df$age_group <- cut(df$age,breaks = c(0,18,26,50,Inf),right = F)
levels(df$age_group) <- c("Pediatric","Young Adult","Adult","Older Adult")
df$hba1c_group <- cut(df$hba1c_baseline,breaks = c(0,7,8,Inf))
levels(df$hba1c_group) <- c("<= 7%","7% - 8.9%",">= 9%")
demographics <- df %>% group_by(record_id) %>% filter(row_number()==1)
# Table 1
t1 <- tableby(cohort ~ hba1c_baseline + hba1c_group + age + age_group + sex +
race + insurance,data = demographics)
# Print
summary(t1,pfootnote = T,labelTranslations =
list(age = "Age (years) at HCL Start",
age_group = "Age Group at HCL Start",
sex = "Sex",race = "Race",
insurance = "Insurance",
hba1c_baseline = "HbA1c (%) at Baseline",
hba1c_group = "HbA1c Group"))
View(df)
install.packages("survivalROC")
library(survivalROC)
browseVignettes("survivalROC")
data(mayo)
View(mayo)
?survivalROC
?coords
??coords
library(pROC)
?coords
?roc
library(affy)
load("C:/Users/timbv/Documents/GitHub/School/Statistical Genomics/hw2/.RData")
?MAplot
log(Data)
?affy
?expresso
?plotDensity.AffyBatch
browseVignettes("affy")
?expresso
knitr::opts_chunk$set(echo = TRUE,cache=TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/timbv/Documents/GitHub/School/Statistical Genomics/hw2")
library(knitr)
library(affy)
library(simpleaffy)
boxplot(Data,log=T)
quantile_data <- expresso(Data,normalize.method = "quantiles",
summary.method="avgdiff",
bgcorrect.method="rma",
pmcorrect.method="pmonly")
boxplot(exprs(quantile_data))
boxplot(Data)
?`boxplot,AffyBatch-method`
boxplot(Data)
quantile_data <- expresso(Data,normalize.method = "quantiles",
summary.method="avgdiff",
bgcorrect.method="rma",
pmcorrect.method="pmonly")
boxplot(log(exprs(quantile_data),base = 2))
boxplot(Data)
loess_data <- expresso(Data,normalize.method = "loess",
summary.method="avgdiff",
bgcorrect.method="rma",
pmcorrect.method="pmonly")
boxplot(log(exprs(loess_data),base = 2))
boxplot(Data)
constant_data <- expresso(Data,normalize.method = "constant",
summary.method="avgdiff",
bgcorrect.method="rma",
pmcorrect.method="pmonly")
boxplot(log(exprs(constant_data),base = 2))
mas_data <- expresso(Data,summary.method="mas",
normalize.method = "quantiles",
bgcorrect.method="rma",
pmcorrect.method="pmonly")
boxplot(log(exprs(mas_data),base = 2))
median_data <- expresso(Data,summary.method="medianpolish",
normalize.method = "quantiles",
bgcorrect.method="rma",
pmcorrect.method="pmonly")
boxplot(log(exprs(median_data),base = 2))
mas_data_2 <- expresso(Data,pmcorrect.method="mas",
summary.method="avgdiff",
normalize.method = "quantiles",
bgcorrect.method="rma")
boxplot(log(exprs(mas_data_2),base = 2))
mas_data_2 <- expresso(Data,pmcorrect.method="subtractmm",
summary.method="avgdiff",
normalize.method = "quantiles",
bgcorrect.method="rma")
boxplot(log(exprs(median_data),base = 2))
median_data <- expresso(Data,summary.method="medianpolish",
normalize.method = "quantiles",
bgcorrect.method="rma",
pmcorrect.method="pmonly")
boxplot(log(exprs(median_data),base = 2))
boxplot(Data)
knitr::opts_chunk$set(echo = TRUE,cache=TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/timbv/Documents/GitHub/School/Statistical Genomics/hw2")
library(knitr)
library(affy)
library(simpleaffy)
pd = read.AnnotatedDataFrame("./targets.txt" , header=TRUE,
row.names=1,as.is=TRUE)
Data = ReadAffy(filenames=pData(pd)$FileName, phenoData=pd,
sampleNames=sampleNames(pd))
head(exprs(Data))
sampleNames(Data)
head(probeNames(Data))
head(mm(Data))
head(pm(Data))
pData(Data)
image(Data)
plot.qc.stats(qc.affy(Data))
