control = mean(as.numeric(x[1:8]))
knockout = mean(as.numeric(x[9:16]))
return(c(control,knockout,control-knockout))
})
fc <- t(fc)
fc_results <- as.data.frame(cbind(gene_names,fc))
colnames(fc_results) <-
c("Gene","Control mean","Knockout mean","log2FC")
kable(head(fc_results[order(abs(fc_results$log2FC),
decreasing = T),],10),
caption = "Top 10 genes with largest absolute value of fold change",
row.names = F)
# Tests
tp <- apply(array,1,function(x){
control = as.numeric(x[1:8])
knockout = as.numeric(x[9:16])
t <- t.test(control,knockout)
return(c(t$statistic,t$p.value))
})
# Format results
tp <- as.data.frame(t(tp))
colnames(tp) <- c("T","p value")
fc_results <- as.data.frame(cbind(fc_results,tp))
kable(head(fc_results[order(abs(fc_results$T),decreasing = T),],10),
caption = "Top 10 genes with largest t-statistic",
row.names = F)
y <- ifelse(grepl("c",colnames(array)),1,2)
x <- as.matrix(array)
data=list(x=x,y=y)
samr_obj <- samr(data)
samr_pvalues <- samr.pvalues.from.perms(samr_obj$tt,samr_obj$ttstar)
samr_results <- cbind(gene_names,samr_obj$tt,samr_pvalues)
colnames(samr_results) <- c("Gene","Modified t-statistic","p value")
# P values
kable(head(samr_results[order(abs(samr_results[,2]),
decreasing = T),],10),
caption = "Top 10 genes with largest modified t-statistic",
row.names = F)
design <- matrix(ncol = 2,nrow = ncol(array))
colnames(design) <- c("Control","Knockout")
rownames(design) <- colnames(array)
design[,1] <- rep(1,nrow(design))
design[,2] <- ifelse(grepl("k",rownames(design)),1,0)
fit <- lmFit(array, design)
eb <- eBayes(fit)
limma_res <- topTable(eb,coef = 2,number = nrow(array))
kable(head(limma_res,10),
caption = "Top 10 differentially expressed genes (based on the moderated t-statistic)")
combos <- combinations(16,8,colnames(array))
cores <- detectCores()
cl <- makeCluster(cores,type = "FORK")
pvalues <- parApply(cl,array,1,function(g){
maxt <- t.test(g[grep("c",names(array))],
g[grep("k",names(array))])
perms <- apply(combos,1,function(c){
control <- g[c]
knockout <- g[setdiff(names(g),c)]
t <- t.test(control,knockout)
return(t$statistic)
})
return(sum(abs(perms)>=abs(maxt$statistic))/length(perms))
})
stopCluster(cl)
a_bonf <- 0.01 / nrow(array)
kable(fc_results[fc_results$`p value`<=a_bonf,],
caption = "Significant genes after Bonferroni correction",
row.names = F)
a_sid <- 1-(1-0.01)^(1/nrow(array))
kable(fc_results[fc_results$`p value`<=a_sid,],
caption = "Significant genes after Sidak correction",
row.names = F)
ordered <- fc_results[order(fc_results$`p value`),]
m <- nrow(ordered)
j <- 1:m
jstar <- min(which((ordered$`p value` > 0.01/(m+1-j))==T))
kable(ordered[1:(jstar-1),],
caption = "Significant genes after Holm correction",
row.names = F)
q <- 0.01
jstar <- max(which((ordered$`p value` <= (j/m)*q)==T))
kable(ordered[1:jstar,],
caption = "Significant genes after Benjamini-Hochberg correction",
row.names = F)
q <- qvalue(fc_results$`p value`)
fc_results$qvalue <- q$qvalues
kable(fc_results[fc_results$qvalue<=0.01,],
caption = "Significant genes based on q-value",
row.names = F)
length(pvalues)
sum(samr_results[,'p value']<=0.01)
knitr::opts_chunk$set(echo=TRUE,cache=TRUE,
message=FALSE,warning = FALSE)
knitr::opts_knit$set(root.dir="/home/tim/Documents/GitHub/School/Statistical Genomics/hw3")
library(knitr)
library(impute)
library(limma)
library(samr)
library(qvalue)
library(gtools)
library(parallel)
set.seed(1017)
array <- read.table("./hw3data/hw3arraydata.txt")
gene_names <- read.table("./hw3data/hw3genenames.txt",
blank.lines.skip = FALSE)
fc <- apply(array,1,function(x){
control = mean(as.numeric(x[1:8]))
knockout = mean(as.numeric(x[9:16]))
return(c(control,knockout,control-knockout))
})
fc <- t(fc)
fc_results <- as.data.frame(cbind(gene_names,fc))
colnames(fc_results) <-
c("Gene","Control mean","Knockout mean","log2FC")
kable(head(fc_results[order(abs(fc_results$log2FC),
decreasing = T),],10),
caption = "Top 10 genes with largest absolute value of fold change",
row.names = F)
# Tests
tp <- apply(array,1,function(x){
control = as.numeric(x[1:8])
knockout = as.numeric(x[9:16])
t <- t.test(control,knockout)
return(c(t$statistic,t$p.value))
})
# Format results
tp <- as.data.frame(t(tp))
colnames(tp) <- c("T","p value")
fc_results <- as.data.frame(cbind(fc_results,tp))
kable(head(fc_results[order(abs(fc_results$T),decreasing = T),],10),
caption = "Top 10 genes with largest t-statistic",
row.names = F)
y <- ifelse(grepl("c",colnames(array)),1,2)
x <- as.matrix(array)
data=list(x=x,y=y)
samr_obj <- samr(data)
samr_pvalues <- samr.pvalues.from.perms(samr_obj$tt,samr_obj$ttstar)
samr_results <- cbind(gene_names,samr_obj$tt,samr_pvalues)
colnames(samr_results) <- c("Gene","Modified t-statistic","p value")
# P values
kable(head(samr_results[order(abs(samr_results[,2]),
decreasing = T),],10),
caption = "Top 10 genes with largest modified t-statistic",
row.names = F)
sum(samr_results[,'p value']<=0.01)
warnings
warnings()
knitr::opts_chunk$set(echo=TRUE,message=FALSE,warning = FALSE)
knitr::opts_knit$set(root.dir="/home/tim/Documents/GitHub/School/Statistical Genomics/hw3")
library(knitr)
library(impute)
library(limma)
library(samr)
library(qvalue)
library(gtools)
library(parallel)
set.seed(1017)
array <- read.table("./hw3data/hw3arraydata.txt")
gene_names <- read.table("./hw3data/hw3genenames.txt",
blank.lines.skip = FALSE)
fc <- apply(array,1,function(x){
control = mean(as.numeric(x[1:8]))
knockout = mean(as.numeric(x[9:16]))
return(c(control,knockout,control-knockout))
})
fc <- t(fc)
fc_results <- as.data.frame(cbind(gene_names,fc))
colnames(fc_results) <-
c("Gene","Control mean","Knockout mean","log2FC")
kable(head(fc_results[order(abs(fc_results$log2FC),
decreasing = T),],10),
caption = "Top 10 genes with largest absolute value of fold change",
row.names = F)
# Tests
tp <- apply(array,1,function(x){
control = as.numeric(x[1:8])
knockout = as.numeric(x[9:16])
t <- t.test(control,knockout)
return(c(t$statistic,t$p.value))
})
# Format results
tp <- as.data.frame(t(tp))
colnames(tp) <- c("T","p value")
fc_results <- as.data.frame(cbind(fc_results,tp))
kable(head(fc_results[order(abs(fc_results$T),decreasing = T),],10),
caption = "Top 10 genes with largest t-statistic",
row.names = F)
y <- ifelse(grepl("c",colnames(array)),1,2)
x <- as.matrix(array)
data=list(x=x,y=y)
samr_obj <- samr(data)
samr_pvalues <- samr.pvalues.from.perms(samr_obj$tt,samr_obj$ttstar)
samr_results <- cbind(gene_names,samr_obj$tt,samr_pvalues)
colnames(samr_results) <- c("Gene","Modified t-statistic","p value")
# P values
kable(head(samr_results[order(abs(samr_results[,2]),
decreasing = T),],10),
caption = "Top 10 genes with largest modified t-statistic",
row.names = F)
design <- matrix(ncol = 2,nrow = ncol(array))
colnames(design) <- c("Control","Knockout")
rownames(design) <- colnames(array)
design[,1] <- rep(1,nrow(design))
design[,2] <- ifelse(grepl("k",rownames(design)),1,0)
fit <- lmFit(array, design)
eb <- eBayes(fit)
limma_res <- topTable(eb,coef = 2,number = nrow(array))
kable(head(limma_res,10),
caption = "Top 10 differentially expressed genes (based on the moderated t-statistic)")
a_bonf <- 0.01 / nrow(array)
kable(fc_results[fc_results$`p value`<=a_bonf,],
caption = "Significant genes after Bonferroni correction",
row.names = F)
a_sid <- 1-(1-0.01)^(1/nrow(array))
kable(fc_results[fc_results$`p value`<=a_sid,],
caption = "Significant genes after Sidak correction",
row.names = F)
ordered <- fc_results[order(fc_results$`p value`),]
m <- nrow(ordered)
j <- 1:m
jstar <- min(which((ordered$`p value` > 0.01/(m+1-j))==T))
kable(ordered[1:(jstar-1),],
caption = "Significant genes after Holm correction",
row.names = F)
q <- 0.01
jstar <- max(which((ordered$`p value` <= (j/m)*q)==T))
kable(ordered[1:jstar,],
caption = "Significant genes after Benjamini-Hochberg correction",
row.names = F)
q <- qvalue(fc_results$`p value`)
fc_results$qvalue <- q$qvalues
kable(fc_results[fc_results$qvalue<=0.01,],
caption = "Significant genes based on q-value",
row.names = F)
y <- ifelse(grepl("c",colnames(array)),1,2)
x <- as.matrix(array)
data=list(x=x,y=y)
samr_obj <- samr(data)
y <- ifelse(grepl("c",colnames(array)),1,2)
x <- as.matrix(array)
data=list(x=x,y=y)
samr_obj <- samr(data)
y <- ifelse(grepl("c",colnames(array)),1,2)
x <- as.matrix(array)
data=list(x=x,y=y)
samr_obj <- samr(data)
samr_pvalues <- samr.pvalues.from.perms(samr_obj$tt,samr_obj$ttstar)
samr_results <- cbind(gene_names,samr_obj$tt,samr_pvalues)
colnames(samr_results) <- c("Gene","Modified t-statistic","p value")
# P values
kable(head(samr_results[order(abs(samr_results[,2]),
decreasing = T),],10),
caption = "Top 10 genes with largest modified t-statistic",
row.names = F)
sum(samr_results[,'p value']<=0.01)
knitr::opts_chunk$set(echo=TRUE,message=FALSE,warning = FALSE)
knitr::opts_knit$set(root.dir="/home/tim/Documents/GitHub/School/Statistical Genomics/hw3")
library(knitr)
library(impute)
library(limma)
library(samr)
library(qvalue)
library(gtools)
library(parallel)
set.seed(1017)
array <- read.table("./hw3data/hw3arraydata.txt")
gene_names <- read.table("./hw3data/hw3genenames.txt",
blank.lines.skip = FALSE)
fc <- apply(array,1,function(x){
control = mean(as.numeric(x[1:8]))
knockout = mean(as.numeric(x[9:16]))
return(c(control,knockout,control-knockout))
})
fc <- t(fc)
fc_results <- as.data.frame(cbind(gene_names,fc))
colnames(fc_results) <-
c("Gene","Control mean","Knockout mean","log2FC")
kable(head(fc_results[order(abs(fc_results$log2FC),
decreasing = T),],10),
caption = "Top 10 genes with largest absolute value of fold change",
row.names = F)
# Tests
tp <- apply(array,1,function(x){
control = as.numeric(x[1:8])
knockout = as.numeric(x[9:16])
t <- t.test(control,knockout)
return(c(t$statistic,t$p.value))
})
# Format results
tp <- as.data.frame(t(tp))
colnames(tp) <- c("T","p value")
fc_results <- as.data.frame(cbind(fc_results,tp))
kable(head(fc_results[order(abs(fc_results$T),decreasing = T),],10),
caption = "Top 10 genes with largest t-statistic",
row.names = F)
y <- ifelse(grepl("c",colnames(array)),1,2)
x <- as.matrix(array)
data=list(x=x,y=y)
samr_obj <- samr(data)
samr_pvalues <- samr.pvalues.from.perms(samr_obj$tt,samr_obj$ttstar)
samr_results <- cbind(gene_names,samr_obj$tt,samr_pvalues)
colnames(samr_results) <- c("Gene","Modified t-statistic","p value")
# P values
kable(head(samr_results[order(abs(samr_results[,2]),
decreasing = T),],10),
caption = "Top 10 genes with largest modified t-statistic",
row.names = F)
sum(samr_results[,'p value']<=0.01)
knitr::opts_chunk$set(echo=TRUE,message=FALSE,warning = FALSE)
knitr::opts_knit$set(root.dir="/home/tim/Documents/GitHub/School/Statistical Genomics/hw3")
library(knitr)
library(impute)
library(limma)
library(samr)
library(qvalue)
library(gtools)
library(parallel)
set.seed(1017)
array <- read.table("./hw3data/hw3arraydata.txt")
gene_names <- read.table("./hw3data/hw3genenames.txt",
blank.lines.skip = FALSE)
fc <- apply(array,1,function(x){
control = mean(as.numeric(x[1:8]))
knockout = mean(as.numeric(x[9:16]))
return(c(control,knockout,control-knockout))
})
fc <- t(fc)
fc_results <- as.data.frame(cbind(gene_names,fc))
colnames(fc_results) <-
c("Gene","Control mean","Knockout mean","log2FC")
kable(head(fc_results[order(abs(fc_results$log2FC),
decreasing = T),],10),
caption = "Top 10 genes with largest absolute value of fold change",
row.names = F)
# Tests
tp <- apply(array,1,function(x){
control = as.numeric(x[1:8])
knockout = as.numeric(x[9:16])
t <- t.test(control,knockout)
return(c(t$statistic,t$p.value))
})
# Format results
tp <- as.data.frame(t(tp))
colnames(tp) <- c("T","p value")
fc_results <- as.data.frame(cbind(fc_results,tp))
kable(head(fc_results[order(abs(fc_results$T),decreasing = T),],10),
caption = "Top 10 genes with largest t-statistic",
row.names = F)
y <- ifelse(grepl("c",colnames(array)),1,2)
x <- as.matrix(array)
data=list(x=x,y=y)
samr_obj <- samr(data)
samr_pvalues <- samr.pvalues.from.perms(samr_obj$tt,samr_obj$ttstar)
samr_results <- cbind(gene_names,samr_obj$tt,samr_pvalues)
colnames(samr_results) <- c("Gene","Modified t-statistic","p value")
# P values
kable(head(samr_results[order(abs(samr_results[,2]),
decreasing = T),],10),
caption = "Top 10 genes with largest modified t-statistic",
row.names = F)
design <- matrix(ncol = 2,nrow = ncol(array))
colnames(design) <- c("Control","Knockout")
rownames(design) <- colnames(array)
design[,1] <- rep(1,nrow(design))
design[,2] <- ifelse(grepl("k",rownames(design)),1,0)
fit <- lmFit(array, design)
eb <- eBayes(fit)
limma_res <- topTable(eb,coef = 2,number = nrow(array))
kable(head(limma_res,10),
caption = "Top 10 differentially expressed genes (based on the moderated t-statistic)")
a_bonf <- 0.01 / nrow(array)
kable(fc_results[fc_results$`p value`<=a_bonf,],
caption = "Significant genes after Bonferroni correction",
row.names = F)
a_sid <- 1-(1-0.01)^(1/nrow(array))
kable(fc_results[fc_results$`p value`<=a_sid,],
caption = "Significant genes after Sidak correction",
row.names = F)
ordered <- fc_results[order(fc_results$`p value`),]
m <- nrow(ordered)
j <- 1:m
jstar <- min(which((ordered$`p value` > 0.01/(m+1-j))==T))
kable(ordered[1:(jstar-1),],
caption = "Significant genes after Holm correction",
row.names = F)
q <- 0.01
jstar <- max(which((ordered$`p value` <= (j/m)*q)==T))
kable(ordered[1:jstar,],
caption = "Significant genes after Benjamini-Hochberg correction",
row.names = F)
q <- qvalue(fc_results$`p value`)
fc_results$qvalue <- q$qvalues
kable(fc_results[fc_results$qvalue<=0.01,],
caption = "Significant genes based on q-value",
row.names = F)
array <- read.table("./hw3data/hw3arraydata.txt")
gene_names <- read.table("./hw3data/hw3genenames.txt",
blank.lines.skip = FALSE)
fc <- apply(array,1,function(x){
control = mean(as.numeric(x[1:8]))
knockout = mean(as.numeric(x[9:16]))
return(c(control,knockout,control-knockout))
})
fc <- t(fc)
fc_results <- as.data.frame(cbind(gene_names,fc))
colnames(fc_results) <-
c("Gene","Control mean","Knockout mean","log2FC")
kable(head(fc_results[order(abs(fc_results$log2FC),
decreasing = T),],10),
caption = "Top 10 genes with largest absolute value of fold change",
row.names = F)
# Tests
tp <- apply(array,1,function(x){
control = as.numeric(x[1:8])
knockout = as.numeric(x[9:16])
t <- t.test(control,knockout)
return(c(t$statistic,t$p.value))
})
# Format results
tp <- as.data.frame(t(tp))
colnames(tp) <- c("T","p value")
fc_results <- as.data.frame(cbind(fc_results,tp))
kable(head(fc_results[order(abs(fc_results$T),decreasing = T),],10),
caption = "Top 10 genes with largest t-statistic",
row.names = F)
y <- ifelse(grepl("c",colnames(array)),1,2)
x <- as.matrix(array)
data=list(x=x,y=y)
samr_obj <- samr(data)
y <- ifelse(grepl("c",colnames(array)),1,2)
x <- as.matrix(array)
data=list(x=x,y=y)
samr_obj <- samr(data)
samr_pvalues <- samr.pvalues.from.perms(samr_obj$tt,samr_obj$ttstar)
samr_results <- cbind(gene_names,samr_obj$tt,samr_pvalues)
colnames(samr_results) <- c("Gene","Modified t-statistic","p value")
# P values
kable(head(samr_results[order(abs(samr_results[,2]),
decreasing = T),],10),
caption = "Top 10 genes with largest modified t-statistic",
row.names = F)
sum(samr_results[,'p value']<=0.01)
knitr::opts_chunk$set(echo=TRUE,message=FALSE,warning = FALSE)
knitr::opts_knit$set(root.dir="/home/tim/Documents/GitHub/School/Statistical Genomics/hw3")
library(knitr)
library(impute)
library(limma)
library(samr)
library(qvalue)
library(gtools)
library(parallel)
set.seed(1017)
array <- read.table("./hw3data/hw3arraydata.txt")
gene_names <- read.table("./hw3data/hw3genenames.txt",
blank.lines.skip = FALSE)
fc <- apply(array,1,function(x){
control = mean(as.numeric(x[1:8]))
knockout = mean(as.numeric(x[9:16]))
return(c(control,knockout,control-knockout))
})
fc <- t(fc)
fc_results <- as.data.frame(cbind(gene_names,fc))
colnames(fc_results) <-
c("Gene","Control mean","Knockout mean","log2FC")
kable(head(fc_results[order(abs(fc_results$log2FC),
decreasing = T),],10),
caption = "Top 10 genes with largest absolute value of fold change",
row.names = F)
# Tests
tp <- apply(array,1,function(x){
control = as.numeric(x[1:8])
knockout = as.numeric(x[9:16])
t <- t.test(control,knockout)
return(c(t$statistic,t$p.value))
})
# Format results
tp <- as.data.frame(t(tp))
colnames(tp) <- c("T","p value")
fc_results <- as.data.frame(cbind(fc_results,tp))
kable(head(fc_results[order(abs(fc_results$T),decreasing = T),],10),
caption = "Top 10 genes with largest t-statistic",
row.names = F)
y <- ifelse(grepl("c",colnames(array)),1,2)
x <- as.matrix(array)
data=list(x=x,y=y)
samr_obj <- samr(data)
samr_pvalues <- samr.pvalues.from.perms(samr_obj$tt,samr_obj$ttstar)
samr_results <- cbind(gene_names,samr_obj$tt,samr_pvalues)
colnames(samr_results) <- c("Gene","Modified t-statistic","p value")
# P values
kable(head(samr_results[order(abs(samr_results[,2]),
decreasing = T),],10),
caption = "Top 10 genes with largest modified t-statistic",
row.names = F)
sum(samr_results[,'p value']<=0.01)
design <- matrix(ncol = 2,nrow = ncol(array))
colnames(design) <- c("Control","Knockout")
rownames(design) <- colnames(array)
design[,1] <- rep(1,nrow(design))
design[,2] <- ifelse(grepl("k",rownames(design)),1,0)
fit <- lmFit(array, design)
eb <- eBayes(fit)
limma_res <- topTable(eb,coef = 2,number = nrow(array))
kable(head(limma_res,10),
caption = "Top 10 differentially expressed genes (based on the moderated t-statistic)")
topTable(eb,coef = 2,number = nrow(array))[,"P.Value"]
sum(topTable(eb,coef = 2,number = nrow(array))[,"P.Value"]<=0.01)
limma_res <- topTable(eb,coef = 2,number = 10)
limma_res
rownames(limma_res) <- gene_names$V1[as.numeric(rownames(limma_res))]
kable(limma_res,
caption = "Top 10 differentially expressed genes (based on the moderated t-statistic)")
sum(pvalues<=0.01)
