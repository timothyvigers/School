library(samr)
browseVignettes("samr")
?samr
knitr::opts_chunk$set(echo=TRUE,cache=TRUE,message=FALSE)
knitr::opts_knit$set(root.dir="/home/tim/Documents/GitHub/School/Statistical Genomics/hw3")
library(knitr)
library(impute)
library(limma)
library(samr)
array <- read.table("./hw3data/hw3arraydata.txt")
gene_names <- read.table("./hw3data/hw3genenames.txt",
blank.lines.skip = FALSE)
fc <- apply(array,1,function(x){
control = mean(as.numeric(x[1:8]))
knockout = mean(as.numeric(x[9:16]))
return(control-knockout)
})
fc_results <- as.data.frame(cbind(gene_names,fc))
colnames(fc_results) <- c("Gene","log2FC")
kable(head(fc_results[order(abs(fc_results$log2FC),decreasing = T),],10),
caption = "Top 10 genes with largest absolute value of fold change",
row.names = F)
# Tests
tp <- apply(array,1,function(x){
control = as.numeric(x[1:8])
knockout = as.numeric(x[9:16])
t <- t.test(control,knockout,var.equal = T)
return(c(t$statistic,t$p.value))
})
# Format results
tp <- as.data.frame(t(tp))
colnames(tp) <- c("T","p value")
fc_results <- as.data.frame(cbind(fc_results,tp))
kable(head(fc_results[order(fc_results$T,decreasing = T),],10),
caption = "Top 10 genes with largest t statistic",
row.names = F)
set.seed(100)
x<-matrix(rnorm(1000*20),ncol=20)
dd<-sample(1:1000,size=100)
u<-matrix(2*rnorm(100),ncol=10,nrow=100)
x[dd,11:20]<-x[dd,11:20]+u
y<-c(rep(1,10),rep(2,10))
y
View(x)
design <- matrix(ncol = 2,nrow = ncol(array))
colnames(design) <- c("Control","Knockout")
rownames(design) <- colnames(array)
design[,1] <- rep(1,nrow(design))
design[,2] <- ifelse(grepl("k",rownames(design)),1,0)
design
grepl("c",colnames(array))
y <- ifelse(grepl("c",colnames(array)),1,2)
y <- ifelse(grepl("c",colnames(array)),1,2)
data=list(x=array,y=y, geneid=gene_names$V1)
s <- samr(data)
x <- as.numeric(array)
x <- numeric(array)
typeof(array)
x <- matrix(array)
data=list(x=x,y=y, geneid=gene_names$V1)
s <- samr(data)
data=list(x=x,y=y,resp.type="Two class unpaired")
s <- samr(data)
View(x)
x <- data.matrix(array)
data=list(x=x,y=y,resp.type="Two class unpaired")
s <- samr(data)
s$set.seed(100)
x<-matrix(rnorm(1000*20),ncol=20)
dd<-sample(1:1000,size=100)
u<-matrix(2*rnorm(100),ncol=10,nrow=100)
x[dd,11:20]<-x[dd,11:20]+u
y<-c(rep(1,10),rep(2,10))
set.seed(100)
x<-matrix(rnorm(1000*20),ncol=20)
dd<-sample(1:1000,size=100)
u<-matrix(2*rnorm(100),ncol=10,nrow=100)
x[dd,11:20]<-x[dd,11:20]+u
y<-c(rep(1,10),rep(2,10))
y2 <- ifelse(grepl("c",colnames(array)),1,2)
x2 <- data.matrix(array)
View(x2)
View(x)
typeof(x)
typeof(x2)
data=list(x=x2,y=y2,resp.type="Two class unpaired")
samr(data)
warnings()
set.seed(3)
x<-abs(100*matrix(rnorm(1000*20),ncol=20))
x=trunc(x)
y<- c(rep(1,10),rep(2,10))
x[1:50,y==2]=x[1:50,y==2]+50
data=list(x=x,y=y, geneid=as.character(1:nrow(x)),
genenames=paste("g",as.character(1:nrow(x)),sep=""))
samr.obj<-samr(data,  resp.type="Two class unpaired",assay.type="seq",  nperms=100)
data=list(x=x2,y=y2,resp.type="Two class unpaired",assay.type = "seq")
s <- samr(data)
data=list(x=x2,y=y2,resp.type="Two class unpaired",assay.type = "array")
s <- samr(data)
data=list(x=x2,y=y2,resp.type="Two class unpaired",
assay.type = "array",genenames=gene_names$V1)
s <- samr(data)
s
s$testStatistic
s$tt
x
x2
x
View(x)
as.numeric(x2)
t <- as.numeric(x2)
x2 <- as.matrix(array)
t <- as.numeric(x2)
t
data=list(x=array,y=y2,resp.type="Two class unpaired",
assay.type = "array",genenames=gene_names$V1)
y <- ifelse(grepl("c",colnames(array)),1,2)
data=list(x=array,y=y2,resp.type="Two class unpaired",
assay.type = "array",genenames=gene_names$V1)
s <- samr(data)
y <- ifelse(grepl("c",colnames(array)),1,2)
x <- as.matrix(array)
data=list(x=x,y=y,resp.type="Two class unpaired",
assay.type = "array",genenames=gene_names$V1)
samr(data)
BiocManager::install("qvalue")
install.packages("gtools")
update.packages(ask = F)
update.packages(ask = F)
remove.packages('foreign','/usr/lib/R/library')
update.packages(ask = F)
update.packages(ask = F)
BiocManager::install()
install.packages("gtools")
knitr::opts_chunk$set(echo=TRUE,cache=TRUE,
message=FALSE,warning = FALSE)
knitr::opts_knit$set(root.dir="/home/tim/Documents/GitHub/School/Statistical Genomics/hw3")
library(knitr)
library(impute)
library(limma)
library(samr)
library(qvalue)
library(gtools)
array <- read.table("./hw3data/hw3arraydata.txt")
gene_names <- read.table("./hw3data/hw3genenames.txt",
blank.lines.skip = FALSE)
fc <- apply(array,1,function(x){
control = mean(as.numeric(x[1:8]))
knockout = mean(as.numeric(x[9:16]))
return(control-knockout)
})
fc_results <- as.data.frame(cbind(gene_names,fc))
colnames(fc_results) <- c("Gene","log2FC")
kable(head(fc_results[order(abs(fc_results$log2FC),decreasing = T),],10),
caption = "Top 10 genes with largest absolute value of fold change",
row.names = F)
# Tests
tp <- apply(array,1,function(x){
control = as.numeric(x[1:8])
knockout = as.numeric(x[9:16])
t <- t.test(control,knockout,var.equal = T)
return(c(t$statistic,t$p.value))
})
# Format results
tp <- as.data.frame(t(tp))
colnames(tp) <- c("T","p value")
fc_results <- as.data.frame(cbind(fc_results,tp))
kable(head(fc_results[order(fc_results$T,decreasing = T),],10),
caption = "Top 10 genes with largest t statistic",
row.names = F)
y <- ifelse(grepl("c",colnames(array)),1,2)
x <- as.matrix(array)
data=list(x=x,y=y,resp.type="Two class unpaired",
assay.type = "array",genenames=gene_names$V1)
s <- samr(data)
design <- matrix(ncol = 2,nrow = ncol(array))
colnames(design) <- c("Control","Knockout")
rownames(design) <- colnames(array)
design[,1] <- rep(1,nrow(design))
design[,2] <- ifelse(grepl("k",rownames(design)),1,0)
fit <- lmFit(array, design)
eb <- eBayes(fit)
limma_res <- topTable(eb,coef = 2)
rownames(limma_res) <- gene_names$V1[as.numeric(rownames(limma_res))]
kable(limma_res,
caption = "Top 10 differentially expressed genes (based on the moderated t statistic)")
?combinations
?qvalue
combinations(v=array$c1)
combinations(nrow(array))
combinations(nrow(array),nrow(array))
combinations(nrow(array),8
)
combinations(nrow(array),16)
c <- combinations(nrow(array),nrow(array))
p <- permutations(nrow(array),nrow(array))
combinations(3,2,letters[1:3])
options(expressions=1e5)
cmat <- combinations(300,2)
permutations(3,2,letters[1:3])
t <- head(array)
View(t)
combinations(8,8,t)
combinations(8,2,t)
combinations(8,8,t[1,])
t[1,]
combinations(16,16,t)
combinations(16,16,t[1,])
combinations(16,16,colnames(t))
permutations(16,16,colnames(t))
p <- permutations(16,16,colnames(t))
p <- permutations(4,4,colnames(t)[1:4])
p
p <- permutations(16,8,colnames(t))
choose(16,8)
knitr::opts_chunk$set(echo=TRUE,cache=TRUE,
message=FALSE,warning = FALSE)
knitr::opts_knit$set(root.dir="/home/tim/Documents/GitHub/School/Statistical Genomics/hw3")
library(knitr)
library(impute)
library(limma)
library(samr)
library(qvalue)
library(gtools)
set.seed(1017)
array <- read.table("./hw3data/hw3arraydata.txt")
gene_names <- read.table("./hw3data/hw3genenames.txt",
blank.lines.skip = FALSE)
fc <- apply(array,1,function(x){
control = mean(as.numeric(x[1:8]))
knockout = mean(as.numeric(x[9:16]))
return(control-knockout)
})
fc_results <- as.data.frame(cbind(gene_names,fc))
colnames(fc_results) <- c("Gene","log2FC")
kable(head(fc_results[order(abs(fc_results$log2FC),decreasing = T),],10),caption = "Top 10 genes with largest absolute value of fold change",
row.names = F)
# Tests
tp <- apply(array,1,function(x){
control = as.numeric(x[1:8])
knockout = as.numeric(x[9:16])
t <- t.test(control,knockout,var.equal = T)
return(c(t$statistic,t$p.value))
})
# Format results
tp <- as.data.frame(t(tp))
colnames(tp) <- c("T","p value")
fc_results <- as.data.frame(cbind(fc_results,tp))
kable(head(fc_results[order(fc_results$T,decreasing = T),],10),
caption = "Top 10 genes with largest t statistic",
row.names = F)
y <- ifelse(grepl("c",colnames(array)),1,2)
x <- as.matrix(array)
data=list(x=x,y=y,resp.type="Two class unpaired",
assay.type = "array",genenames=gene_names$V1)
s <- samr(data)
design <- matrix(ncol = 2,nrow = ncol(array))
colnames(design) <- c("Control","Knockout")
rownames(design) <- colnames(array)
design[,1] <- rep(1,nrow(design))
design[,2] <- ifelse(grepl("k",rownames(design)),1,0)
fit <- lmFit(array, design)
eb <- eBayes(fit)
limma_res <- topTable(eb,coef = 2)
rownames(limma_res) <- gene_names$V1[as.numeric(rownames(limma_res))]
kable(limma_res,
caption = "Top 10 differentially expressed genes (based on the moderated t statistic)")
combos <- combinations(16,8,colnames(array))
pvalues <- apply(array[1:5,],1,function(g){
maxt <- t.test(g[grep("c",names(array))],
g[grep("k",names(array))])
perms <- apply(combos,1,function(c){
control <- g[c]
knockout <- g[setdiff(names(g),c)]
t <- t.test(control,knockout)
return(t$statistic)
})
return(sum(abs(perms)>=abs(maxt$statistic))/length(perms))
})
pvalues
View(fc_results)
combos <- combinations(16,8,colnames(array))
pvalues <- apply(array,1,function(g){
maxt <- t.test(g[grep("c",names(array))],
g[grep("k",names(array))])
perms <- apply(combos,1,function(c){
control <- g[c]
knockout <- g[setdiff(names(g),c)]
t <- t.test(control,knockout)
return(t$statistic)
})
return(sum(abs(perms)>=abs(maxt$statistic))/length(perms))
})
pvalues
length(pvalues)
knitr::opts_chunk$set(echo=TRUE,cache=TRUE,
message=FALSE,warning = FALSE)
knitr::opts_knit$set(root.dir="/home/tim/Documents/GitHub/School/Statistical Genomics/hw3")
library(knitr)
library(impute)
library(limma)
library(samr)
library(qvalue)
library(gtools)
set.seed(1017)
perm_results <- cbind(gene_names,pvalues)
View(perm_results)
s$testStatistic
s
?samr
summary(s)
s$tt
s$tt
samr_results <- samr(data)$tt
samr_results <- cbind(gene_names,samr_obj$tt)
samr_obj <- samr(data)
samr_obj <- samr(data)
samr_results <- cbind(gene_names,samr_obj$tt)
View(samr_results)
fc_results[1,]
?pt
pt(fc_results$T[1])
pt(fc_results$T[1],7)
pt(fc_results$T[1],8)
pt(fc_results$T[1],6)
pt(fc_results$T[1],5)
?t.test
x <- array[1,]
control = as.numeric(x[1:8])
knockout = as.numeric(x[9:16])
t <- t.test(control,knockout,var.equal = T)
t$statistic
pt(fc_results$T[1],7)
pt(fc_results$T[1],15)
?pt
pt(fc_results$T[1],15,lower.tail = F)
pt(abs(fc_results$T[1]),15,lower.tail = F)
pt(fc_results$T[1],1)
t.test(control,knockout,var.equal = T)
pt(fc_results$T[1],14)
fc_results$T[1]
pt(-2.6305,14)
t <- t.test(control,knockout)
t.test(control,knockout)
t$statistic
pt(-2.630478,14)
pt(-2.630478,15)
pt(-2.630478,16)
View(fc_results)
pt(-3.42047449,16)
pt(-3.42047449,14)
pt(-3.42047449,13)
pt(-3.42047449,10)
pt(-3.42047449,1)
pt(-3.42047449,10)
pt(-3.42047449,8)
pt(-3.42047449,9)
t
t <- t.test(control,knockout,var.equal = T)
t
t$statistic
pt(-2.630478,df=14)
?t.test
t.test(1:10, y = c(7:20))
temp <- t.test(1:10, y = c(7:20))
temp$statistic
samr_obj
2*pt(temp$statistic)
2*pt(temp$statistic,df = 14)
2*pt(abs(temp$statistic),df = 14)
t$statistic
t$p.value
t
t <- 4.472136
pt(t)
pt(t,19)
pt(-t,19)
control
x <- array[1,]
knitr::opts_chunk$set(echo=TRUE,cache=TRUE,
message=FALSE,warning = FALSE)
knitr::opts_knit$set(root.dir="/home/tim/Documents/GitHub/School/Statistical Genomics/hw3")
library(knitr)
library(impute)
library(limma)
library(samr)
library(qvalue)
library(gtools)
set.seed(1017)
control = as.numeric(x[1:8])
knockout = as.numeric(x[9:16])
t <- t.test(control,knockout,var.equal = T)
2*pt(-abs(t$statistic),df=n-1)
2*pt(-abs(t$statistic),df=14)
View(fc_results)
y <- ifelse(grepl("c",colnames(array)),1,2)
x <- as.matrix(array)
data=list(x=x,y=y,resp.type="Two class unpaired",
assay.type = "array",genenames=gene_names$V1)
samr_obj <- samr(data)
samr_results <- cbind(gene_names,samr_obj$tt)
colnames(samr_results)
colnames(samr_results) <- c("Gene","Modified t-statistic")
samr_pvalues <- 2*pt(-abs(samr_obj$tt),df=14)
samr_pvalues
samr_results <- cbind(gene_names,samr_obj$tt,samr_pvalues)
colnames(samr_results) <- c("Gene","Modified t-statistic","p value")
# P values
kable(samr_results)
samr_results <- cbind(gene_names,samr_obj$tt,samr_pvalues)
colnames(samr_results) <- c("Gene","Modified t-statistic","p value")
# P values
kable(head(samr_results[order(samr_results[,2],decreasing = T),],10),
caption = "Top 10 genes with largest modified t-statistic",
row.names = F)
perm_results <- cbind(gene_names,pvalues)
View(perm_results)
sum(pvalues <= 0.01)
