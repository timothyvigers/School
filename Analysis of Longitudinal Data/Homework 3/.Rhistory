c(1,1,1,1) %*% matrix(c(1,1,1,1))
c(1,1,1,1) %*% 2 %*% matrix(c(1,1,1,1))
c(1,1,1,1) %*% 2
c(2,2,2,2) %*% matrix(c(1,1,1,1))
knitr::opts_chunk$set(echo = TRUE)
carotene <- read.csv("/Users/timvigers/Documents/GitHub/School/Analysis of Longitudinal Data/Homework 3/beta_carotene_data.csv")
View(carotene)
library(reshape2)
?melt
knitr::opts_chunk$set(echo = TRUE)
library(reshape2)
library(lmer)
library(lme4)
library(lme4)
library(nlme)
# Read in
carotene <- read.csv("/Users/timvigers/Documents/GitHub/School/Analysis of Longitudinal Data/Homework 3/beta_carotene_data.csv")
# Wide to long
long <- melt(carotene,id.vars = c("Id","Prepar"))
View(long)
# Continuous time
long$time <- long$variable
?replace
levels(long$time)
replace(long$time,levels(long$time),c(0,1,6,8,10,12))
replace(long$time,levels(long$time))
?revalue
plyr::revalue(long$time,replace = list("Base1lvl" = 0))
typeof(long$time)
# Continuous time
long$time <- factor(long$variable)
plyr::revalue(long$time,replace = list("Base1lvl" = 0))
plyr::revalue(long$time,replace = list(0 = "Base1lvl"))
plyr::revalue(long$time,replace = list(a = "Base1lvl"))
levels(long$time)
plyr::mapvalues(long$time,from = c("Base1lvl","Base2lvl","Wk6lvl","Wk8lvl","Wk10lvl","Wk12lvl"))
plyr::mapvalues(long$time,from = c("Base1lvl","Base2lvl","Wk6lvl","Wk8lvl","Wk10lvl","Wk12lvl"),to = c(0,1,6,8,10,12))
library(tidyverse)
# Continuous time
long$time <- factor(long$variable)
mapvalues(long$time,
from = c("Base1lvl","Base2lvl","Wk6lvl","Wk8lvl","Wk10lvl","Wk12lvl"),
to = c(0,1,6,8,10,12))
plyr::mapvalues(long$time,
from = c("Base1lvl","Base2lvl","Wk6lvl","Wk8lvl","Wk10lvl","Wk12lvl"),
to = c(0,1,6,8,10,12))
# Read in
carotene <- read.csv("/Users/timvigers/Documents/GitHub/School/Analysis of Longitudinal Data/Homework 3/beta_carotene_data.csv")
# Wide to long
long <- melt(carotene,id.vars = c("Id","Prepar"))
# Continuous time
long$time <- long$variable
long$time <- plyr::mapvalues(long$time,
from = c("Base1lvl","Base2lvl","Wk6lvl","Wk8lvl","Wk10lvl","Wk12lvl"),
to = c(0,1,6,8,10,12))
# Use baseline 2 as time 0
long <- long %>% filter(variable != "Base1lvl") %>% arrange(Id,variable)
# Read in
carotene <- read.csv("/Users/timvigers/Documents/GitHub/School/Analysis of Longitudinal Data/Homework 3/beta_carotene_data.csv")
# Wide to long
long <- melt(carotene,id.vars = c("Id","Prepar"))
# Use baseline 2 as time 0
long <- long %>% filter(variable != "Base1lvl") %>% arrange(Id,variable)
# Read in
carotene <- read.csv("/Users/timvigers/Documents/GitHub/School/Analysis of Longitudinal Data/Homework 3/beta_carotene_data.csv")
# Wide to long
long <- melt(carotene,id.vars = c("Id","Prepar"))
# Use baseline 2 as time 0
long <- long %>% filter(variable != "Base1lvl") %>% arrange(Id,variable)
# Continuous time
long$time <- long$variable
long$time <- plyr::mapvalues(long$time,
from = c("Base2lvl","Wk6lvl","Wk8lvl","Wk10lvl","Wk12lvl"),
to = c(0,6,8,10,12))
typeof(long$time)
# Models
mod <- lmer(value ~ Prepar + Prepar:time + (1|Id), data = long)
summary(mod)
# Models
mod <- lmer(value ~ Prepar + Prepar:as.numeric(time) + (1|Id), data = long)
# Models
summary(mod)
# Models
mod <- lmer(value ~ Prepar + Prepar:as.numeric(time) + (1|Id),
data = long, method = "ML")
?lmer
# Models
mod <- lmer(value ~ Prepar + Prepar:as.numeric(time) + (1|Id),
data = long, REML = F)
summary(mod)
# Models
# Time polynomial
mod <- lmer(value ~ poly(as.numeric(time),4) + (1|Id),
data = long, REML = F)
summary(mod)
# Models
# Time polynomial
mod <- lme(value ~ poly(as.numeric(time),4), random=~1|Id,
data = long, REML = F)
# Models
# Time polynomial
mod <- lme(value ~ poly(as.numeric(time),4), random=~1|Id,
data = long)
summary(mod)
kable(summary(mod)$tTable)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(reshape2)
library(lme4)
library(nlme)
library(tidyverse)
head(long,10)
# Read in
carotene <- read.csv("/Users/timvigers/Documents/GitHub/School/Analysis of Longitudinal Data/Homework 3/beta_carotene_data.csv")
# Wide to long
long <- melt(carotene,id.vars = c("Id","Prepar"))
# Use baseline 2 as time 0
long <- long %>% filter(variable != "Base1lvl") %>% arrange(Id,variable)
# Continuous time
long$time <- long$variable
long$time <- plyr::mapvalues(long$time,
from = c("Base2lvl","Wk6lvl","Wk8lvl","Wk10lvl","Wk12lvl"),
to = c(0,6,8,10,12))
long$time <- as.numeric(long$time)
kable(head(long,10))
# Models
# Time polynomial
lin_mod <- lme(value ~ time + time:Prepar, random=~1|Id,
data = long)
# Models
# Time polynomials
lin_mod <- lme(value ~ time + time:Prepar, random=~1|Id,
data = long, REML = F)
# Models
# Time polynomials
lin_mod <- lme(value ~ time + time:Prepar, random=~1|Id,
data = long, method = "ML")
quad_mod <- lme(value ~ I(time^2) + I(time^2):Prepar, random=~1|Id,
data = long, method = "ML")
cub_mod <- lme(value ~ I(time^3) + I(time^3):Prepar, random=~1|Id,
data = long, method = "ML")
quart_mod <- lme(value ~ I(time^4) + I(time^4):Prepar, random=~1|Id,
data = long, method = "ML")
# Models
# Time polynomials
lin_mod <- lme(value ~ time + time:Prepar, random=~1|Id,
data = long, method = "ML")
quad_mod <- lme(value ~ I(time^2) + I(time^2):Prepar, random=~1|Id,
data = long, method = "ML")
cub_mod <- lme(value ~ I(time^3) + I(time^3):Prepar, random=~1|Id,
data = long, method = "ML")
quart_mod <- lme(value ~ I(time^4) + I(time^4):Prepar, random=~1|Id,
data = long, method = "ML")
AIC(lin_mod,quad_mod,cub_mod,quart_mod)
BIC(lin_mod,quad_mod,cub_mod,quart_mod)
quad_mod <- lme(value ~ time + time:Prepar +I(time^2) + I(time^2):Prepar, random=~1|Id,
data = long, method = "ML")
BIC(lin_mod,quad_mod)
# Models
# Time polynomials
lin_mod <- lme(value ~ time + time:Prepar, random=~1|Id,
data = long, method = "ML")
quad_mod <- lme(value ~ time + time:Prepar +
I(time^2) + I(time^2):Prepar, random=~1|Id,
data = long, method = "ML")
cub_mod <- lme(value ~ time + time:Prepar +
I(time^2) + I(time^2):Prepar +
I(time^3) + I(time^3):Prepar, random=~1|Id,
data = long, method = "ML")
quart_mod <- lme(value ~ time + time:Prepar +
I(time^2) + I(time^2):Prepar +
I(time^3) + I(time^3):Prepar +
I(time^4) + I(time^4):Prepar, random=~1|Id,
data = long, method = "ML")
BIC(lin_mod,quad_mod)
BIC(lin_mod,quad_mod,cub_mod,quart_mod)
)
# Models
# Time polynomials
lin_mod <- lme(value ~ time + time:Prepar, random=~1|Id,
data = long, method = "ML")
aic(lin_mod)
AIC(lin_mod)
# Models
# Time polynomials
lin_mod <- lme(value ~ time + time:Prepar, random=~1|Id,
data = long, method = "ML",correlation=corUN())
# Models
# Time polynomials
lin_mod <- lme(value ~ time + time:Prepar, random=~1|Id,
data = long, method = "ML",correlation=corSymm())
AIC(lin_mod)
AR1
# Models
# Time polynomials
lin_mod <- lme(value ~ time + time:Prepar, random=~1|Id,
data = long, method = "ML",correlation=corAR1())
# Models
# Time polynomials
lin_mod <- lme(value ~ time + time:Prepar, random=~1|Id,
data = long, method = "ML",correlation=corSymm(form = ~1|Id))
# Models
# Time polynomials
lin_mod <- lme(value ~ time + time:Prepar, random=~1|Id,
data = long, method = "ML",correlation=corAR1())
AIC(lin_mod)
# Models
# Time polynomials
lin_mod <- lme(value ~ time + time:Prepar, random=~1|Id,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
# Models
# Time polynomials
lin_mod <- lme(value ~ time + time:Prepar, random=~1|Id,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
# Models
# Time polynomials
lin_mod <- lme(value ~ time + time:Prepar, random=~1|Id,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|Id))
# Models
# Time polynomials
lin_mod <- lme(value ~ time + time:Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|Id))
# Models
# Time polynomials
lin_mod <- gls(value ~ time + time:Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|Id))
AIC(lin_mod)
# Models
# Time polynomials
lin_mod <- lme(value ~ time + time:Prepar, random=~1|Id,
data = long, method = "ML")
AIC(lin_mod)
# Models
# Time polynomials
lin_mod <- gls(value ~ time + time:Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
AIC(lin_mod)
summary(quart_mod)
class_mod <- gls(value ~ factor(time)*Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
summary(class_mod)
class_mod <- gls(value ~ factor(variable)*Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
View(long)
# Read in
carotene <- read.csv("/Users/timvigers/Documents/GitHub/School/Analysis of Longitudinal Data/Homework 3/beta_carotene_data.csv")
# Wide to long
long <- melt(carotene,id.vars = c("Id","Prepar"))
# Use baseline 2 as time 0
long <- long %>% filter(variable != "Base1lvl") %>% arrange(Id,variable)
# Continuous time
long$time <- long$variable
long$time <- plyr::mapvalues(long$time,
from = c("Base2lvl","Wk6lvl","Wk8lvl","Wk10lvl","Wk12lvl"),
to = c(0,6,8,10,12))
long$time <- as.numeric(long$time)
long$Prepar <- as.factor(long$Prepar)
kable(head(long,10))
# Read in
carotene <- read.csv("/Users/timvigers/Documents/GitHub/School/Analysis of Longitudinal Data/Homework 3/beta_carotene_data.csv")
# Wide to long
long <- melt(carotene,id.vars = c("Id","Prepar"))
# Use baseline 2 as time 0
long <- long %>% filter(variable != "Base1lvl") %>% arrange(Id,variable)
# Continuous time
long$time <- long$variable
long$time <- plyr::mapvalues(long$time,
from = c("Base2lvl","Wk6lvl","Wk8lvl","Wk10lvl","Wk12lvl"),
to = c(0,6,8,10,12))
long$time <- as.numeric(as.character(long$time))
long$Prepar <- as.factor(long$Prepar)
kable(head(long,10))
# Models
# Time polynomials
lin_mod <- gls(value ~ time*Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
quad_mod <- gls(value ~ time*Prepar +
I(time^2)*Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
cub_mod <- gls(value ~ time*Prepar +
I(time^2)*Prepar +
I(time^3)*Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
quart_mod <- gls(value ~ time*Prepar +
I(time^2)*Prepar +
I(time^3)*Prepar +
I(time^4)*Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
kable(AIC(lin_mod,quad_mod,cub_mod,quart_mod))
kable(BIC(lin_mod,quad_mod,cub_mod,quart_mod))
class_mod <- gls(value ~ factor(variable)*Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
class_mod <- gls(value ~ factor(variable)*Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
AIC(cub_mod,class_mod)
summary(cub_mod)
View(long)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(reshape2)
library(lme4)
library(nlme)
library(tidyverse)
kable(AIC(lin_mod,quad_mod,cub_mod,quart_mod))
summary(cub_mod)
AIC(cub_mod,class_mod)
aic <- AIC(cub_mod,class_mod)
aic$AIC
diff(aic$AIC)
source('~/.active-rstudio-document', echo=TRUE)
class_mod <- gls(value ~ factor(variable)*Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
AIC(cub_mod,class_mod)
summary(class_mod)
summary(class_mod)$tTable
BIC(cub_mod,class_mod)
write.csv(long,file = "/Users/timvigers/Desktop/long.csv",row.names = F)
library(emmeans)
# By group, time, and group*time
emm_group <- emmeans(cub_mod, specs = ~Prepar)
emm_group
emm_group_time <- emmeans(cub_mod, specs = ~time*Prepar +
I(time^2)*Prepar +
I(time^3)*Prepar)
emm_group_time
View(long)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(reshape2)
library(lme4)
library(nlme)
library(emmeans)
library(tidyverse)
# By group, time, and group*time
emm_group <- emmeans(cub_mod, specs = ~Prepar)
emm_time <- emmeans(dog_mod, specs = ~factor(time))
emm_time <- emmeans(cub_mod, specs = ~factor(time))
emm_time
mean(long$time)
# By group, time, and group*time
emm_group <- emmeans(cub_mod, specs = ~Prepar)
emm_time
# By group, time, and group*time
emm_group <- emmeans(cub_mod, specs = ~factor(Prepar))
# By group, time, and group*time
emm_group <- emmeans(cub_mod, specs = ~factor(Prepar))
emm_group_time <- emmeans(cub_mod, specs = ~time*Prepar + I(time^2)*Prepar +
I(time^3)*Prepar)
emm_group_time
emm_time
# Read in
carotene <- read.csv("/Users/timvigers/Documents/GitHub/School/Analysis of Longitudinal Data/Homework 3/beta_carotene_data.csv")
# Wide to long
long <- melt(carotene,id.vars = c("Id","Prepar"))
# Use baseline 2 as time 0
long <- long %>% filter(variable != "Base1lvl") %>% arrange(Id,variable)
# Continuous time
long$time <- long$variable
long$time <- plyr::mapvalues(long$time,
from = c("Base2lvl","Wk6lvl","Wk8lvl","Wk10lvl","Wk12lvl"),
to = c(0,6,8,10,12))
long$time <- as.numeric(as.character(long$time))
long$Prepar <- as.factor(long$Prepar)
kable(head(long,10))
# Models
# Time polynomials
lin_mod <- gls(value ~ time*Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
quad_mod <- gls(value ~ time*Prepar +
I(time^2)*Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
cub_mod <- gls(value ~ time*Prepar +
I(time^2)*Prepar +
I(time^3)*Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
quart_mod <- gls(value ~ time*Prepar +
I(time^2)*Prepar +
I(time^3)*Prepar +
I(time^4)*Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
kable(AIC(lin_mod,quad_mod,cub_mod,quart_mod))
kable(BIC(lin_mod,quad_mod,cub_mod,quart_mod))
class_mod <- gls(value ~ factor(variable)*Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
AIC(cub_mod,class_mod)
BIC(cub_mod,class_mod)
# By group, time, and group*time
emm_group <- emmeans(cub_mod, specs = ~factor(Prepar))
emm_time <- emmeans(cub_mod, specs = ~factor(time))
emm_group_time <- emmeans(cub_mod, specs = ~time*Prepar + I(time^2)*Prepar +
I(time^3)*Prepar)
# By group, time, and group*time
emm_group <- emmeans(cub_mod, specs = ~Prepar)
emm_time
emm_group
```{r warning=FALSE}
# By group, time, and group*time
emm_group <- emmeans(cub_mod, specs = ~Prepar)
emm_group
# By group, time, and group*time
emm_group <- emmeans(cub_mod, specs = ~Prepar)
group1 <- c(1,0,0,0)
group4 <- c(0,0,0,1)
contrast(emm_group, method = list("Group 1 vs. group 4" = group1 - group4))
256-316
emm_group
?emmeans
# By group, time, and group*time
emm_group <- emmeans(cub_mod, specs = ~Prepar + time)
# By group, time, and group*time
emm_group <- emmeans(cub_mod, specs = ~Prepar + time)
emm_group
matrix(c(1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1),ncol = 4)
t(matrix(c(1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1),ncol = 4))
z <- matrix(c(1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1),ncol = 4)
zt <- t(z)
g <- matrix(c(2,6,8,10,6,3,12,15,8,12,4,20,10,15,20,5),ncol = 4)
z%*%g
(z%*%g) %*% zt
zt
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(reshape2)
library(lme4)
library(nlme)
library(emmeans)
library(tidyverse)
# Read in
carotene <- read.csv("/Users/timvigers/Documents/GitHub/School/Analysis of Longitudinal Data/Homework 3/beta_carotene_data.csv")
# Wide to long
long <- melt(carotene,id.vars = c("Id","Prepar"))
# Use baseline 2 as time 0
long <- long %>% filter(variable != "Base1lvl") %>% arrange(Id,variable)
# Continuous time
long$time <- long$variable
long$time <- plyr::mapvalues(long$time,
from = c("Base2lvl","Wk6lvl","Wk8lvl","Wk10lvl","Wk12lvl"),
to = c(0,6,8,10,12))
long$time <- as.numeric(as.character(long$time))
long$Prepar <- as.factor(long$Prepar)
kable(head(long,10))
# Models
# Time polynomials
lin_mod <- gls(value ~ time*Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
quad_mod <- gls(value ~ time*Prepar +
I(time^2)*Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
cub_mod <- gls(value ~ time*Prepar +
I(time^2)*Prepar +
I(time^3)*Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
quart_mod <- gls(value ~ time*Prepar +
I(time^2)*Prepar +
I(time^3)*Prepar +
I(time^4)*Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
kable(AIC(lin_mod,quad_mod,cub_mod,quart_mod))
kable(BIC(lin_mod,quad_mod,cub_mod,quart_mod))
class_mod <- gls(value ~ factor(variable)*Prepar,
data = long, method = "ML",correlation=corSymm(form = ~1|Id),
weights = varIdent(form = ~1|time))
AIC(cub_mod,class_mod)
BIC(cub_mod,class_mod)
# By group, time, and group*time
emm_group <- emmeans(cub_mod, specs = ~Prepar)
emm_group
group1 <- c(1,0,0,0)
group4 <- c(0,0,0,1)
contrast(emm_group, method = list("Group 1 vs. group 4" = group4 - group1))
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(reshape2)
library(lme4)
library(nlme)
library(emmeans)
library(tidyverse)
# Read in
carotene <- read.csv("/Users/timvigers/Documents/GitHub/School/
Analysis of Longitudinal Data/Homework 3/
beta_carotene_data.csv")
