df <- as.data.frame(lapply(df, as.character))
colnames(df) <- c("Season","Lg","Tm","W","L","Finish","Age","Ht_Feet",
"Ht_Inches","Wt.","G","MP","FG","FGA","FG%","3P","3PA",
"3P%","2P","2PA","2P%","FT","FTA","FT%","ORB","DRB","TRB",
"AST","STL","BLK","TOV","PF","PTS")
df$Team <- team
all_seasons <- rbind(all_seasons,df)
}
# Scrape each team page
all_seasons <- data.frame()
for (team in teams) {
url <- paste0("https://www.basketball-reference.com/teams/",team,"/stats_basic_totals.html")
table <- url %>%
read_html() %>%
html_nodes("table") %>%
html_table()
df <- as.data.frame(table[[1]])
df <- df[colnames(df) != ""] %>%
filter(Season != "Season",Season != "2019-20") %>%
suppressWarnings(separate(Ht.,c("Ht_Feet","Ht_Inches"),sep = "-"))
df[df == ""] <- NA
df <- as.data.frame(lapply(df, as.character))
colnames(df) <- c("Season","Lg","Tm","W","L","Finish","Age","Ht_Feet",
"Ht_Inches","Wt.","G","MP","FG","FGA","FG%","3P","3PA",
"3P%","2P","2PA","2P%","FT","FTA","FT%","ORB","DRB","TRB",
"AST","STL","BLK","TOV","PF","PTS")
df$Team <- team
all_seasons <- rbind(all_seasons,df)
}
# Scrape each team page
all_seasons <- data.frame()
for (team in teams) {
url <- paste0("https://www.basketball-reference.com/teams/",team,"/stats_basic_totals.html")
table <- url %>%
read_html() %>%
html_nodes("table") %>%
html_table()
df <- as.data.frame(table[[1]])
df <- df[colnames(df) != ""] %>%
filter(Season != "Season",Season != "2019-20") %>%
separate(Ht.,c("Ht_Feet","Ht_Inches"),sep = "-")
df[df == ""] <- NA
df <- as.data.frame(lapply(df, as.character))
colnames(df) <- c("Season","Lg","Tm","W","L","Finish","Age","Ht_Feet",
"Ht_Inches","Wt.","G","MP","FG","FGA","FG%","3P","3PA",
"3P%","2P","2PA","2P%","FT","FTA","FT%","ORB","DRB","TRB",
"AST","STL","BLK","TOV","PF","PTS")
df$Team <- team
all_seasons <- rbind(all_seasons,df)
}
View(all_seasons)
# Convert columns
all_seasons[,4:(ncol(all_seasons)-1)] <-
lapply(all_seasons[,4:(ncol(all_seasons)-1)],as.numeric)
# Scrape each team page
all_seasons <- data.frame()
for (team in teams) {
url <- paste0("https://www.basketball-reference.com/teams/",team,"/stats_basic_totals.html")
table <- url %>%
read_html() %>%
html_nodes("table") %>%
html_table()
df <- as.data.frame(table[[1]])
df <- df[colnames(df) != ""] %>%
filter(Season != "Season",Season != "2019-20") %>%
separate(Ht.,c("Ht_Feet","Ht_Inches"),sep = "-")
df[df == ""] <- NA
colnames(df) <- c("Season","Lg","Tm","W","L","Finish","Age","Ht_Feet",
"Ht_Inches","Wt.","G","MP","FG","FGA","FG%","3P","3PA",
"3P%","2P","2PA","2P%","FT","FTA","FT%","ORB","DRB","TRB",
"AST","STL","BLK","TOV","PF","PTS")
df$Team <- team
all_seasons <- rbind(all_seasons,df)
}
str(all_seasons)
# Convert columns
all_seasons[,4:(ncol(all_seasons)-1)] <-
lapply(all_seasons[,4:(ncol(all_seasons)-1)],as.numeric)
str(all_seasons)
all_seasons[,c(1,2,3,ncol(all_seasons))] <-
lapply(all_seasons[,c(1,2,3,ncol(all_seasons))],as.factor)
str(all_seasons)
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/timvigers/Documents/GitHub/School/Analysis of Longitudinal Data/Final Project")
library(rvest)
library(tableone)
library(skimr)
library(knitr)
library(tidyverse)
source("./scrape.R")
source("./scrape.R")
# Scrape each team page
all_seasons <- data.frame()
for (team in teams) {
url <- paste0("https://www.basketball-reference.com/teams/",team,"/stats_basic_totals.html")
table <- url %>%
read_html() %>%
html_nodes("table") %>%
html_table()
df <- as.data.frame(table[[1]])
df <- df[colnames(df) != ""] %>%
filter(Season != "Season",Season != "2019-20")
df[df == ""] <- NA
colnames(df) <- c("Season","Lg","Tm","W","L","Finish","Age","Ht.","Wt.",
"G","MP","FG","FGA","FG%","3P","3PA",
"3P%","2P","2PA","2P%","FT","FTA","FT%","ORB","DRB","TRB",
"AST","STL","BLK","TOV","PF","PTS")
df$Team <- team
all_seasons <- rbind(all_seasons,df)
}
url <- paste0("https://www.basketball-reference.com/teams/",team,"/stats_basic_totals.html")
table <- url %>%
read_html() %>%
html_nodes("table") %>%
html_table()
df <- as.data.frame(table[[1]])
df <- df[colnames(df) != ""] %>%
filter(Season != "Season",Season != "2019-20")
df[df == ""] <- NA
df <- as.data.frame(lapply(df, as.character))
colnames(df) <- c("Season","Lg","Tm","W","L","Finish","Age","Ht.","Wt.",
"G","MP","FG","FGA","FG%","3P","3PA",
"3P%","2P","2PA","2P%","FT","FTA","FT%","ORB","DRB","TRB",
"AST","STL","BLK","TOV","PF","PTS")
df$Team <- team
all_seasons <- rbind(all_seasons,df)
# Scrape each team page
all_seasons <- data.frame()
for (team in teams) {
url <- paste0("https://www.basketball-reference.com/teams/",team,"/stats_basic_totals.html")
table <- url %>%
read_html() %>%
html_nodes("table") %>%
html_table()
df <- as.data.frame(table[[1]])
df <- df[colnames(df) != ""] %>%
filter(Season != "Season",Season != "2019-20")
df[df == ""] <- NA
df <- as.data.frame(lapply(df, as.character))
colnames(df) <- c("Season","Lg","Tm","W","L","Finish","Age","Ht.","Wt.",
"G","MP","FG","FGA","FG%","3P","3PA",
"3P%","2P","2PA","2P%","FT","FTA","FT%","ORB","DRB","TRB",
"AST","STL","BLK","TOV","PF","PTS")
df$Team <- team
all_seasons <- rbind(all_seasons,df)
}
source("./scrape.R")
# Write to CSV
write.csv(all_seasons,file = "/Users/timvigers/Documents/GitHub/School/Analysis of Longitudinal Data/Final Project/all_seasons.csv",
row.names = F)
# Read in CSVs
passing <- read.csv("./passing_data.csv")
View(passing)
df <- read.csv("./all_seasons.csv")
rm(list = ls())
# Get data from basketball reference
source("./scrape.R")
# Read in passing CSV
passing <- read.csv("./passing_data.csv")
# Clean up
rm(list = c(df,table,team,url))
?rm
# Clean up
rm(list = c("df","table","team","url"))
# Scrape each team page
all_seasons <- data.frame()
for (team in teams) {
url <- paste0("https://www.basketball-reference.com/teams/",team,"/stats_basic_totals.html")
table <- url %>%
read_html() %>%
html_nodes("table") %>%
html_table()
df <- as.data.frame(table[[1]])
df <- df[colnames(df) != ""] %>%
filter(Season != "Season",Season != "2019-20")
df[df == ""] <- NA
df <- as.data.frame(lapply(df, as.character))
colnames(df) <- c("Season","Lg","Tm","W","L","Finish","Age","Ht.","Wt.",
"G","MP","FG","FGA","FG%","3P","3PA",
"3P%","2P","2PA","2P%","FT","FTA","FT%","ORB","DRB","TRB",
"AST","STL","BLK","TOV","PF","PTS")
df$Team <- team
all_seasons <- rbind(all_seasons,df)
}
# Convert columns
all_seasons[,4:(ncol(all_seasons)-1)] <-
lapply(all_seasons[,4:(ncol(all_seasons)-1)],as.numeric)
all_seasons[,c(1,2,3,ncol(all_seasons))] <-
lapply(all_seasons[,c(1,2,3,ncol(all_seasons))],as.factor)
# Clean up
rm(list = c("df","table","team","url"))
# Get data from basketball reference
source("./scrape.R")
# Read in passing CSV
passing <- read.csv("./passing_data.csv")
View(all_seasons)
# Plot assists by year and team
ggplot(all_seasons,aes(x = Season,y = AST,group = Team)) + geom_line()
# Plot assists by year and team
ggplot(all_seasons,aes(x = Season,y = AST,color = Team)) + geom_line()
# Plot assists by year and team
ggplot(all_seasons,aes(x = Season,y = AST,group = Team)) + geom_line()
# Plot assists by year and team
ggplot(all_seasons,aes(x = Season,y = AST,group = Team)) + geom_line(aes(color = Team))
# Plot assists by year and team
ggplot(all_seasons,aes(x = Season,y = AST/(FG + 3P),group = Team)) + geom_line(aes(color = Team))
all_seasons$`AST%` <- AST/(FG + 3P)
all_seasons <- all_seasons %>%
mutate(AST% = AST / (FG + 3P))
all_seasons <- all_seasons %>%
mutate(`AST%` = AST / (FG + 3P))
all_seasons$FG
all_seasons$FG + all_seasons$`3P`
all_seasons <- all_seasons %>%
mutate(`AST%` = AST / (FG + `3P`))
# Plot assists by year and team
ggplot(all_seasons,aes(x = Season,y = `AST%`,group = Team)) + geom_line(aes(color = Team))
team
teams <- c("ATL","BOS","NJN","CHA","CHI","CLE","DAL","DEN","DET","GSW","HOU",
"IND","LAC","LAL","MEM","MIA","MIL","MIN","NOH","NYK","OKC","ORL",
"PHI","PHO","POR","SAC","SAS","TOR","UTA","WAS")
# Scrape each team page
all_seasons <- data.frame()
team <- teams[1]
url <- paste0("https://www.basketball-reference.com/teams/",team,"/stats_basic_totals.html")
table <- url %>%
read_html() %>%
html_nodes("table") %>%
html_table()
df <- as.data.frame(table[[1]])
df <- df[colnames(df) != ""] %>%
filter(Season != "Season",Season != "2019-20")
df[df == ""] <- NA
df <- as.data.frame(lapply(df, as.character))
View(df)
colnames(df) <- c("Season","Lg","Tm","W","L","Finish","Age","Ht.","Wt.",
"G","MP","FG","FGA","FG%","3P","3PA",
"3P%","2P","2PA","2P%","FT","FTA","FT%","ORB","DRB","TRB",
"AST","STL","BLK","TOV","PF","PTS")
df$Team <- team
all_seasons <- rbind(all_seasons,df)
View(all_seasons)
# Convert columns
all_seasons[,4:(ncol(all_seasons)-1)] <-
lapply(all_seasons[,4:(ncol(all_seasons)-1)],as.numeric)
View(all_seasons)
url <- paste0("https://www.basketball-reference.com/teams/",team,"/stats_basic_totals.html")
table <- url %>%
read_html() %>%
html_nodes("table") %>%
html_table()
df <- as.data.frame(table[[1]])
df <- df[colnames(df) != ""] %>%
filter(Season != "Season",Season != "2019-20")
df[df == ""] <- NA
df <- as.data.frame(lapply(df, as.character))
colnames(df) <- c("Season","Lg","Tm","W","L","Finish","Age","Ht.","Wt.",
"G","MP","FG","FGA","FG%","3P","3PA",
"3P%","2P","2PA","2P%","FT","FTA","FT%","ORB","DRB","TRB",
"AST","STL","BLK","TOV","PF","PTS")
df$Team <- team
all_seasons <- rbind(all_seasons,df)
str(all_seasons)
url <- paste0("https://www.basketball-reference.com/teams/",team,"/stats_basic_totals.html")
table <- url %>%
read_html() %>%
html_nodes("table") %>%
html_table()
df <- as.data.frame(table[[1]])
df <- df[colnames(df) != ""] %>%
filter(Season != "Season",Season != "2019-20")
df[df == ""] <- NA
df <- as.data.frame(lapply(df, as.character))
colnames(df) <- c("Season","Lg","Tm","W","L","Finish","Age","Ht.","Wt.",
"G","MP","FG","FGA","FG%","3P","3PA",
"3P%","2P","2PA","2P%","FT","FTA","FT%","ORB","DRB","TRB",
"AST","STL","BLK","TOV","PF","PTS")
df$Team <- team
View(df)
all_seasons <- rbind(all_seasons,df)
View(all_seasons)
# Scrape each team page
all_seasons <- data.frame()
all_seasons <- rbind.data.frame(all_seasons,df)
# Convert columns
all_seasons[,4:(ncol(all_seasons)-1)] <-
lapply(all_seasons[,4:(ncol(all_seasons)-1)],as.numeric)
all_seasons[,c(1,2,3,ncol(all_seasons))] <-
lapply(all_seasons[,c(1,2,3,ncol(all_seasons))],as.factor)
# Scrape each team page
all_seasons <- data.frame()
url <- paste0("https://www.basketball-reference.com/teams/",team,"/stats_basic_totals.html")
table <- url %>%
read_html() %>%
html_nodes("table") %>%
html_table()
df <- as.data.frame(table[[1]])
df <- df[colnames(df) != ""] %>%
filter(Season != "Season",Season != "2019-20")
df[df == ""] <- NA
df <- as.data.frame(lapply(df, as.character))
colnames(df) <- c("Season","Lg","Tm","W","L","Finish","Age","Ht.","Wt.",
"G","MP","FG","FGA","FG%","3P","3PA",
"3P%","2P","2PA","2P%","FT","FTA","FT%","ORB","DRB","TRB",
"AST","STL","BLK","TOV","PF","PTS")
df$Team <- team
all_seasons <- rbind.data.frame(all_seasons,df)
View(all_seasons)
# Convert columns
all_seasons[,4:(ncol(all_seasons)-1)] <-
lapply(all_seasons[,4:(ncol(all_seasons)-1)],function(x) as.numeric(as.character(x)))
# Scrape each team page
all_seasons <- data.frame()
for (team in teams) {
url <- paste0("https://www.basketball-reference.com/teams/",team,"/stats_basic_totals.html")
table <- url %>%
read_html() %>%
html_nodes("table") %>%
html_table()
df <- as.data.frame(table[[1]])
df <- df[colnames(df) != ""] %>%
filter(Season != "Season",Season != "2019-20")
df[df == ""] <- NA
df <- as.data.frame(lapply(df, as.character))
colnames(df) <- c("Season","Lg","Tm","W","L","Finish","Age","Ht.","Wt.",
"G","MP","FG","FGA","FG%","3P","3PA",
"3P%","2P","2PA","2P%","FT","FTA","FT%","ORB","DRB","TRB",
"AST","STL","BLK","TOV","PF","PTS")
df$Team <- team
all_seasons <- rbind.data.frame(all_seasons,df)
}
View(all_seasons)
# Get data from basketball reference
source("./scrape.R")
# Read in passing CSV
passing <- read.csv("./passing_data.csv")
View(all_seasons)
all_seasons <- all_seasons %>%
mutate(`AST%` = AST / (FG + `3P`))
as.numeric(as.character(all_seasons$FG))
all_seasons[,numcols] <- lapply(all_seasons[,numcols],
function(x) as.numeric(as.character(x)))
# Convert column types
numcols <- c("AST","FG","3P")
all_seasons[,numcols] <- lapply(all_seasons[,numcols],
function(x) as.numeric(as.character(x)))
View(all_seasons)
all_seasons <- all_seasons %>%
mutate(`AST%` = AST / (FG + `3P`))
View(all_seasons)
all_seasons <- all_seasons %>%
mutate(`AST%` = round(AST / (FG + `3P`),3)*100)
View(all_seasons)
# Plot assist percentage by year and team
ggplot(all_seasons,aes(x = Season,y = `AST%`,group = Team)) +
geom_line(aes(color = Team)) + theme_bw()
ggplot(all_seasons,aes(x = Season,y = `AST%`,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
theme(axis.text.x = element_text(angle = 90))
sub("-.*","",all_seasons$Season)
# Season to starting year
all_seasons$Season <- sub("-.*","",all_seasons$Season)
# Convert column types
numcols <- c("Season","AST","FG","3P")
all_seasons[,numcols] <- lapply(all_seasons[,numcols],
function(x) as.numeric(as.character(x)))
# Percentage of baskets assisted
all_seasons <- all_seasons %>%
mutate(`AST%` = round(AST / (FG + `3P`),3)*100)
ggplot(all_seasons,aes(x = Season,y = `AST%`,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
theme(axis.text.x = element_text(angle = 90))
# Plot assist percentage by year and team
ggplot(all_seasons[all_seasons$Season > 1976],aes(x = Season,y = `AST%`,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
theme(axis.text.x = element_text(angle = 90))
# Plot assist percentage by year and team
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
theme(axis.text.x = element_text(angle = 90))
# Plot assist percentage by year and team
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = AST,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
theme(axis.text.x = element_text(angle = 90))
temp <- all_seasons %>% filter(Season == 1998)
View(temp)
# Season to starting year
all_seasons$Season <- sub("-.*","",all_seasons$Season)
# Convert column types
numcols <- c("Season","AST","FG","3P")
all_seasons[,numcols] <- lapply(all_seasons[,numcols],
function(x) as.numeric(as.character(x)))
# Percentage of baskets assisted
all_seasons <- all_seasons %>%
mutate(`AST%` = round(AST / (FG + `3P`),3)*100)
# Plot assist percentage by year and team
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = AST,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
theme(axis.text.x = element_text(angle = 90))
# Plot assist percentage by year and team
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~Team)
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~Team)
# Plot assist percentage by year and team
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
facet_wrap(~Team) +
theme(legend.position = "none")
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
facet_wrap(~Team) +
theme(legend.position = "none")
470/1397
ggplot(all_seasons[all_seasons$Lg == "NBA",],aes(x = Season,y = `AST%`,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
facet_wrap(~Team) +
theme(legend.position = "none")
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
facet_wrap(~Team) +
theme(legend.position = "none")
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
theme(legend.position = "none")
# Percentage of baskets assisted
all_seasons <- all_seasons %>%
mutate(`AST%` = round(AST / FG,3)*100)
# Plot assist percentage by year and team
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~Team)
# Plot assist percentage by year and team
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_smooth() + theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_smooth(se = F) + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Percentage of Baskets Assisted, Loess Smoothing")
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_smooth(color = Team,se = F) + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Percentage of Baskets Assisted, Loess Smoothing")
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_smooth(aes(color = Team),se = F) + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Percentage of Baskets Assisted, Loess Smoothing")
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_smooth(aes(color = Team),se = F) + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~Team) +
ggtitle("Percentage of Baskets Assisted, Loess Smoothing")
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~Team) +
ggtitle("Percentage of Baskets Assisted") +
theme(legend.position = "none")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/timvigers/Documents/GitHub/School/Analysis of Longitudinal Data/Final Project")
library(rvest)
library(tableone)
library(skimr)
library(knitr)
library(tidyverse)
# Get data from basketball reference
source("./scrape.R")
# Read in passing CSV
passing <- read.csv("./passing_data.csv")
# Season to starting year
all_seasons$Season <- sub("-.*","",all_seasons$Season)
# Convert column types
numcols <- c("Season","AST","FG","3P")
all_seasons[,numcols] <- lapply(all_seasons[,numcols],
function(x) as.numeric(as.character(x)))
# Percentage of baskets assisted
all_seasons <- all_seasons %>%
mutate(`AST%` = round(AST / FG,3)*100)
# Plot assist percentage by year and team
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Percentage of Baskets Assisted")
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~Team) +
ggtitle("Percentage of Baskets Assisted") +
theme(legend.position = "none")
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_smooth(aes(color = Team),se = F) + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Percentage of Baskets Assisted, Loess Smoothing")
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_smooth(aes(color = Team),se = F) + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~Team) +
ggtitle("Percentage of Baskets Assisted, Loess Smoothing") +
theme(legend.position = "none")
