View(post_merger)
mod <- lme(w_perc ~ AST_perc + `FG%`,random = ~1|Team,data = post_merger,
correlation = corAR1())
mod <- lme(w_perc ~ AST_perc + FG%,random = ~1|Team,data = post_merger,
as.formula("w_perc ~ AST_perc + FG%")
as.formula("w_perc ~ AST_perc + FG%")
as.formula("w_perc ~ AST_perc + `FG%`")
mod <- lme(w_perc ~ AST_perc + `FG%`,random = ~1|Team,data = post_merger,
correlation = corAR1())
colnames(post_merger)
colnames(post_merger)[14]
colnames(post_merger)[14] <- "FGP"
mod <- lme(w_perc ~ AST_perc + FGP,random = ~1|Team,data = post_merger,
correlation = corAR1())
summary(mod)
mod <- lme(w_perc ~ AST_perc + FGP + TRB + STL + BLK + TOV + PTS,
random = ~1|Team,data = post_merger,correlation = corAR1())
colnames(post_merger)[7]
colnames(post_merger)
form <- as.formula(paste0(colnames(post_merger)[7:32],collapse = "+"))
colnames(post_merger)
colnames(post_merger)[17]
colnames(post_merger)[17] <- "TPP"
form <- as.formula(paste0(colnames(post_merger)[7:32],collapse = "+"))
colnames(post_merger)
paste0(colnames(post_merger)[7:32],collapse = "+")
form <- as.formula(paste0(colnames(post_merger)[7:32],collapse = "+"))
mod <- lme(w_perc ~ AST_perc + FGP + TRB + STL + BLK + TOV + PTS,
random = ~1|Team,data = post_merger,correlation = corAR1())
summary(mod)
post_merger$TRB <- as.numeric(as.character(post_merger$TRB))
mod <- lme(w_perc ~ AST_perc + FGP + TRB + STL + BLK + TOV + PTS,
random = ~1|Team,data = post_merger,correlation = corAR1())
summary(mod)
hist(post_merger$FGP)
mod <- lme(w_perc ~ AST_perc + TRB + STL + BLK + TOV + PTS,
random = ~1|Team,data = post_merger,correlation = corAR1())
summary(mod)
mod <- lme(w_perc ~ AST_perc + TRB + FGP + STL + BLK + TOV + PTS,
random = ~1|Team,data = post_merger,correlation = corAR1())
summary(mod)
stepAIC(mod)
mod <- lme(w_perc ~ AST_perc + TRB + FGP + STL + BLK + TOV + PTS,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
stepAIC(mod)
car::vif(mod)
mod <- lme(w_perc ~ AST_perc + TRB + FGP + STL + BLK + TOV,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
stepAIC(mod)
car::vif(mod)
library(car)
vif(mod)
mod <- lme(w_perc ~ AST_perc + TRB + FGP + STL + BLK + TOV + PTS,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
vif(mod)
mod <- lme(w_perc ~ AST_perc + TRB + STL + BLK + TOV + PTS,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
vif(mod)
mod <- lme(w_perc ~ AST_perc + Age + Ht. + Wt. + TRB + FGP + STL + BLK + TOV + PTS,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
str(post_merger)
post_merger[,to_numeric] <- lapply(post_merger[,to_numeric],
function(x) as.numeric(as.character(x)))
to_numeric <- c("TRB","Age","Ht.","Wt.")
post_merger[,to_numeric] <- lapply(post_merger[,to_numeric],
function(x) as.numeric(as.character(x)))
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_knit$set(root.dir = "/Users/timvigers/Documents/GitHub/School/Analysis of Longitudinal Data/Final Project")
source("/Users/timvigers/Documents/GitHub/Tim-and-Laura/tim_r_functions.R")
library(knitr)
library(segmented)
library(nlme)
library(lme4)
library(ggrepel)
library(tidyverse)
# Since merger
post_merger <- all_seasons[all_seasons$Season > 1976,]
strsplit(post_merger$Age)
strsplit(post_merger$Age,"-")
?strsplit
View(post_merger)
strsplit(post_merger$Age,"-")
strsplit(post_merger$Age,"\\-")
strsplit(post_merger$Age,"\-")
strsplit(post_merger$Age,"-\\")
strsplit(post_merger$Age,"-")
post_merger$Ht. <- strsplit(post_merger$Age,"\\-")
strsplit(post_merger$Age,"//-")
temp <- strsplit(post_merger$Age,"/-")
str_split(post_merger$Ht.,"-")
temp <- str_split(post_merger$Age,"-")
temp
temp <- str_split(post_merger$Ht.,"-")
temp
sapply(temp, "[[", 1)
height <- str_split(post_merger$Ht.,"-")
heightin <- sapply(temp, "[[", 1) * 12
heightin <- as.numeric(sapply(temp, "[[", 1)) * 12
heightin
post_merger$Ht. <- as.numeric(sapply(temp, "[[", 2)) + heightin
to_numeric <- c("TRB","Age","Ht.","Wt.")
to_numeric <- c("TRB","Age","Ht.","Wt.")
post_merger[,to_numeric] <- lapply(post_merger[,to_numeric],
function(x) as.numeric(as.character(x)))
mod <- lme(w_perc ~ AST_perc + Age + Ht. + Wt. + TRB + FGP + STL + BLK + TOV + PTS,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
post_merger$w_perc <- (as.numeric(as.character(post_merger$W)) /
(as.numeric(as.character(post_merger$W)) +
as.numeric(as.character(post_merger$L))))*100
mod <- lme(w_perc ~ AST_perc + Age + Ht. + Wt. + TRB + FGP + STL + BLK + TOV + PTS,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
colnames(post_merger)[which(colnames(post_merger)=="FG%")]
colnames(post_merger)[which(colnames(post_merger)=="FG%")] <- "FGP"
mod <- lme(w_perc ~ AST_perc + Age + Ht. + Wt. + TRB + FGP + STL + BLK + TOV + PTS,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
stepAIC(mod)
vif(mod)
mod <- lme(w_perc ~ AST_perc + Age + Ht. + Wt.  + FGP + STL + BLK + TOV + PTS,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
vif(mod)
summary(mod)
mod <- lme(w_perc ~ AST_perc + Age + Ht. + Wt. + TRB + STL + BLK + TOV + PTS,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
stepAIC(mod)
summary(mod)
mod <- lme(w_perc ~ AST_perc + Age + Ht. + Wt. + STL + BLK + TOV + PTS,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
vif(mod)
knitr::opts_chunk$set(echo = TRUE)
library(car)
library(nlme)
library(lme4)
library(MASS)
# Get data from basketball reference
source("./Code/scrape.R")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/timvigers/Documents/GitHub/School/Analysis of Longitudinal Data/Final Project")
source("/Users/timvigers/Documents/GitHub/Tim-and-Laura/tim_r_functions.R")
library(car)
library(nlme)
library(lme4)
library(MASS)
# Get data from basketball reference
source("./Code/scrape.R")
# Read in passing CSV
passing <- read.csv("./Data/passing_data.csv")
# Colors
source("./Code/colors.R")
# Season to starting year
all_seasons$Season <- sub("-.*","",all_seasons$Season)
# Convert column types - all seasons
numcols <- c("Season","AST","FG","FGA","FG%","3P","3PA","3P%","STL",
"BLK","TOV","PF","PTS")
all_seasons[,numcols] <- lapply(all_seasons[,numcols],
function(x) as.numeric(as.character(x)))
# Team and season
all_seasons$team_season <- paste(all_seasons$Team,all_seasons$Season)
# Convert column types - passing
passing$Season <- sub("-.*","",passing$Season)
numcols <- c("Season","Passes.Made","Min")
passing[,numcols] <- lapply(passing[,numcols],
function(x) as.numeric(as.character(x)))
# Since merger
post_merger <- all_seasons[all_seasons$Season > 1976,]
post_merger <- post_merger %>% arrange(Team,Season)
# Convert column types
height <- str_split(post_merger$Ht.,"-")
heightin <- as.numeric(sapply(temp, "[[", 1)) * 12
post_merger$Ht. <- as.numeric(sapply(temp, "[[", 2)) + heightin
to_numeric <- c("TRB","Age","Ht.","Wt.")
post_merger[,to_numeric] <- lapply(post_merger[,to_numeric],
function(x) as.numeric(as.character(x)))
colnames(post_merger)[which(colnames(post_merger)=="FG%")] <- "FGP"
View(post_merger)
mod <- lme(w_perc ~ AST_perc + Age + Ht. + Wt. + STL + BLK + TOV + PTS,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
# Win percentage
post_merger$w_perc <- (post_merger$W / (post_merger$W + post_merger$L))*100
to_numeric <- c("TRB","Age","Ht.","Wt.","W","L")
post_merger[,to_numeric] <- lapply(post_merger[,to_numeric],
function(x) as.numeric(as.character(x)))
colnames(post_merger)[which(colnames(post_merger)=="FG%")] <- "FGP"
# Win percentage
post_merger$w_perc <- (post_merger$W / (post_merger$W + post_merger$L))*100
View(post_merger)
mod <- lme(w_perc ~ AST_perc + Age + Ht. + Wt. + STL + BLK + TOV + PTS,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
# Read in passing CSV
passing <- read.csv("./Data/passing_data.csv")
# Colors
source("./Code/colors.R")
# Season to starting year
all_seasons$Season <- sub("-.*","",all_seasons$Season)
# Convert column types - all seasons
numcols <- c("Season","AST","FG","FGA","FG%","3P","3PA","3P%","STL",
"BLK","TOV","PF","PTS")
all_seasons[,numcols] <- lapply(all_seasons[,numcols],
function(x) as.numeric(as.character(x)))
# Team and season
all_seasons$team_season <- paste(all_seasons$Team,all_seasons$Season)
# Convert column types - passing
passing$Season <- sub("-.*","",passing$Season)
numcols <- c("Season","Passes.Made","Min")
passing[,numcols] <- lapply(passing[,numcols],
function(x) as.numeric(as.character(x)))
# Percentage of baskets assisted
all_seasons <- all_seasons %>%
mutate(AST_perc = round(AST / FG,3)*100)
# Since merger
post_merger <- all_seasons[all_seasons$Season > 1976,]
post_merger <- post_merger %>% arrange(Team,Season)
# Convert column types
height <- str_split(post_merger$Ht.,"-")
heightin <- as.numeric(sapply(temp, "[[", 1)) * 12
post_merger$Ht. <- as.numeric(sapply(temp, "[[", 2)) + heightin
to_numeric <- c("TRB","Age","Ht.","Wt.","W","L")
post_merger[,to_numeric] <- lapply(post_merger[,to_numeric],
function(x) as.numeric(as.character(x)))
colnames(post_merger)[which(colnames(post_merger)=="FG%")] <- "FGP"
# Win percentage
post_merger$w_perc <- (post_merger$W / (post_merger$W + post_merger$L))*100
# AST percentage
View(post_merger)
1901/3335
mod <- lme(w_perc ~ AST_perc + Age + Ht. + Wt. + STL + BLK + TOV + PTS,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
stepAIC(mod)
vif(mod)
vif(mod)
mod <- lme(w_perc ~ AST_perc + Age + Ht. + Wt. + STL + BLK + TOV + PTS + FGP,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
stepAIC(mod)
stepAIC(mod)
vif(mod)
# Get data from basketball reference
source("./Code/scrape.R")
# Read in passing CSV
passing <- read.csv("./Data/passing_data.csv")
# Colors
source("./Code/colors.R")
# Season to starting year
all_seasons$Season <- sub("-.*","",all_seasons$Season)
# Convert column types - all seasons
numcols <- c("Season","AST","FG","FGA","FG%","3P","3PA","3P%","STL",
"BLK","TOV","PF","PTS")
all_seasons[,numcols] <- lapply(all_seasons[,numcols],
function(x) as.numeric(as.character(x)))
# Team and season
all_seasons$team_season <- paste(all_seasons$Team,all_seasons$Season)
# Convert column types - passing
passing$Season <- sub("-.*","",passing$Season)
numcols <- c("Season","Passes.Made","Min")
passing[,numcols] <- lapply(passing[,numcols],
function(x) as.numeric(as.character(x)))
# Percentage of baskets assisted
all_seasons <- all_seasons %>%
mutate(AST_perc = round(AST / FG,3)*100)
colnames(all_seasons)[which(colnames(all_seasons)=="FG%")] <- "FGP"
# Since merger
post_merger <- all_seasons[all_seasons$Season > 1976,]
post_merger <- post_merger %>% arrange(Team,Season)
# Convert column types
height <- str_split(post_merger$Ht.,"-")
heightin <- as.numeric(sapply(temp, "[[", 1)) * 12
post_merger$Ht. <- as.numeric(sapply(temp, "[[", 2)) + heightin
to_numeric <- c("TRB","Age","Ht.","Wt.","W","L","FGP")
post_merger[,to_numeric] <- lapply(post_merger[,to_numeric],
function(x) as.numeric(as.character(x)))
# Win percentage
post_merger$w_perc <- (post_merger$W / (post_merger$W + post_merger$L))*100
# AST percentage
# Read in passing CSV
passing <- read.csv("./Data/passing_data.csv")
# Colors
source("./Code/colors.R")
# Season to starting year
all_seasons$Season <- sub("-.*","",all_seasons$Season)
# Convert column types - all seasons
numcols <- c("Season","AST","FG","FGA","FG%","3P","3PA","3P%","STL",
"BLK","TOV","PF","PTS")
all_seasons[,numcols] <- lapply(all_seasons[,numcols],
function(x) as.numeric(as.character(x)))
# Convert column types - all seasons
numcols <- c("Season","AST","FG","FGA","FGP","3P","3PA","3P%","STL",
"BLK","TOV","PF","PTS")
all_seasons[,numcols] <- lapply(all_seasons[,numcols],
function(x) as.numeric(as.character(x)))
# Team and season
all_seasons$team_season <- paste(all_seasons$Team,all_seasons$Season)
# Convert column types - passing
passing$Season <- sub("-.*","",passing$Season)
numcols <- c("Season","Passes.Made","Min")
passing[,numcols] <- lapply(passing[,numcols],
function(x) as.numeric(as.character(x)))
# Percentage of baskets assisted
all_seasons <- all_seasons %>%
mutate(AST_perc = round(AST / FG,3)*100)
colnames(all_seasons)[which(colnames(all_seasons)=="FG%")] <- "FGP"
# Since merger
post_merger <- all_seasons[all_seasons$Season > 1976,]
post_merger <- post_merger %>% arrange(Team,Season)
# Win percentage
post_merger$w_perc <- (post_merger$W / (post_merger$W + post_merger$L))*100
# Get data from basketball reference
source("./Code/scrape.R")
# Read in passing CSV
passing <- read.csv("./Data/passing_data.csv")
# Colors
source("./Code/colors.R")
# Season to starting year
all_seasons$Season <- sub("-.*","",all_seasons$Season)
# Convert column types - all seasons
numcols <- c("Season","AST","FG","FGA","FGP","3P","3PA","3P%","STL",
"BLK","TOV","PF","PTS","W","L")
all_seasons[,numcols] <- lapply(all_seasons[,numcols],
function(x) as.numeric(as.character(x)))
# Get data from basketball reference
source("./Code/scrape.R")
# Read in passing CSV
passing <- read.csv("./Data/passing_data.csv")
# Colors
source("./Code/colors.R")
# Season to starting year
all_seasons$Season <- sub("-.*","",all_seasons$Season)
# Column names
colnames(all_seasons)[which(colnames(all_seasons)=="FG%")] <- "FGP"
# Convert column types - all seasons
numcols <- c("Season","AST","FG","FGA","FGP","3P","3PA","3P%","STL",
"BLK","TOV","PF","PTS")
all_seasons[,numcols] <- lapply(all_seasons[,numcols],
function(x) as.numeric(as.character(x)))
# Team and season
all_seasons$team_season <- paste(all_seasons$Team,all_seasons$Season)
# Convert column types - passing
passing$Season <- sub("-.*","",passing$Season)
numcols <- c("Season","Passes.Made","Min")
passing[,numcols] <- lapply(passing[,numcols],
function(x) as.numeric(as.character(x)))
# Percentage of baskets assisted
all_seasons <- all_seasons %>%
mutate(AST_perc = round(AST / FG,3)*100)
# Since merger
post_merger <- all_seasons[all_seasons$Season > 1976,]
post_merger <- post_merger %>% arrange(Team,Season)
# Win percentage
post_merger$w_perc <- (post_merger$W / (post_merger$W + post_merger$L))*100
# AST percentage
# Read in passing CSV
passing <- read.csv("./Data/passing_data.csv")
# Colors
source("./Code/colors.R")
# Season to starting year
all_seasons$Season <- sub("-.*","",all_seasons$Season)
# Column names
colnames(all_seasons)[which(colnames(all_seasons)=="FG%")] <- "FGP"
# Convert column types - all seasons
numcols <- c("Season","AST","FG","FGA","FGP","3P","3PA","3P%","STL",
"BLK","TOV","PF","PTS","W","L")
all_seasons[,numcols] <- lapply(all_seasons[,numcols],
function(x) as.numeric(as.character(x)))
# Team and season
all_seasons$team_season <- paste(all_seasons$Team,all_seasons$Season)
# Convert column types - passing
passing$Season <- sub("-.*","",passing$Season)
numcols <- c("Season","Passes.Made","Min")
passing[,numcols] <- lapply(passing[,numcols],
function(x) as.numeric(as.character(x)))
# Percentage of baskets assisted
all_seasons <- all_seasons %>%
mutate(AST_perc = round(AST / FG,3)*100)
# Since merger
post_merger <- all_seasons[all_seasons$Season > 1976,]
post_merger <- post_merger %>% arrange(Team,Season)
# Win percentage
post_merger$w_perc <- (post_merger$W / (post_merger$W + post_merger$L))*100
# AST percentage
mod <- lme(w_perc ~ AST_perc + Age + Ht. + Wt. + STL + BLK + TOV + PTS + FGP,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
vif(mod)
summary(mod)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/timvigers/Documents/GitHub/School/Analysis of Longitudinal Data/Final Project")
source("/Users/timvigers/Documents/GitHub/Tim-and-Laura/tim_r_functions.R")
library(car)
library(nlme)
library(lme4)
library(MASS)
# Get data from basketball reference
source("./Code/scrape.R")
# Read in passing CSV
passing <- read.csv("./Data/passing_data.csv")
# Colors
source("./Code/colors.R")
# Season to starting year
all_seasons$Season <- sub("-.*","",all_seasons$Season)
# Column names
colnames(all_seasons)[which(colnames(all_seasons)=="FG%")] <- "FGP"
# Convert column types - all seasons
numcols <- c("Season","AST","FG","FGA","FGP","3P","3PA","3P%","STL",
"BLK","TOV","PF","PTS","W","L","Age")
all_seasons[,numcols] <- lapply(all_seasons[,numcols],
function(x) as.numeric(as.character(x)))
# Team and season
all_seasons$team_season <- paste(all_seasons$Team,all_seasons$Season)
# Convert column types - passing
passing$Season <- sub("-.*","",passing$Season)
numcols <- c("Season","Passes.Made","Min")
passing[,numcols] <- lapply(passing[,numcols],
function(x) as.numeric(as.character(x)))
# Percentage of baskets assisted
all_seasons <- all_seasons %>%
mutate(AST_perc = round(AST / FG,3)*100)
# Since merger
post_merger <- all_seasons[all_seasons$Season > 1976,]
post_merger <- post_merger %>% arrange(Team,Season)
# Win percentage
post_merger$w_perc <- (post_merger$W / (post_merger$W + post_merger$L))*100
# AST percentage
# Read in passing CSV
passing <- read.csv("./Data/passing_data.csv")
# Colors
source("./Code/colors.R")
# Season to starting year
all_seasons$Season <- sub("-.*","",all_seasons$Season)
# Column names
colnames(all_seasons)[which(colnames(all_seasons)=="FG%")] <- "FGP"
# Convert column types - all seasons
numcols <- c("Season","AST","FG","FGA","FGP","3P","3PA","3P%","STL",
"BLK","TOV","PF","PTS","W","L","Age")
all_seasons[,numcols] <- lapply(all_seasons[,numcols],
function(x) as.numeric(as.character(x)))
# Team and season
all_seasons$team_season <- paste(all_seasons$Team,all_seasons$Season)
# Convert column types - passing
passing$Season <- sub("-.*","",passing$Season)
numcols <- c("Season","Passes.Made","Min")
passing[,numcols] <- lapply(passing[,numcols],
function(x) as.numeric(as.character(x)))
# Percentage of baskets assisted
all_seasons <- all_seasons %>%
mutate(AST_perc = round(AST / FG,3)*100)
# Since merger
post_merger <- all_seasons[all_seasons$Season > 1976,]
post_merger <- post_merger %>% arrange(Team,Season)
# Win percentage
post_merger$w_perc <- (post_merger$W / (post_merger$W + post_merger$L))*100
# AST percentage
mod <- lme(w_perc ~ AST_perc + Age + Ht. + Wt. + STL + BLK + TOV + PTS + FGP,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
vif(mod)
summary(mod)
# Convert column types - all seasons
numcols <- c("Season","AST","FG","FGA","FGP","3P","3PA","3P%","STL",
"BLK","TOV","PF","PTS","W","L","Age","Wt.")
all_seasons[,numcols] <- lapply(all_seasons[,numcols],
function(x) as.numeric(as.character(x)))
mod <- lme(w_perc ~ AST_perc + Age + Ht. + Wt. + STL + BLK + TOV + PTS + FGP,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
vif(mod)
summary(mod)
# Get data from basketball reference
source("./Code/scrape.R")
# Read in passing CSV
passing <- read.csv("./Data/passing_data.csv")
# Colors
source("./Code/colors.R")
# Season to starting year
all_seasons$Season <- sub("-.*","",all_seasons$Season)
# Column names
colnames(all_seasons)[which(colnames(all_seasons)=="FG%")] <- "FGP"
# Convert column types - all seasons
numcols <- c("Season","AST","FG","FGA","FGP","3P","3PA","3P%","STL",
"BLK","TOV","PF","PTS","W","L","Age","Wt.")
all_seasons[,numcols] <- lapply(all_seasons[,numcols],
function(x) as.numeric(as.character(x)))
# Team and season
all_seasons$team_season <- paste(all_seasons$Team,all_seasons$Season)
# Convert column types - passing
passing$Season <- sub("-.*","",passing$Season)
numcols <- c("Season","Passes.Made","Min")
passing[,numcols] <- lapply(passing[,numcols],
function(x) as.numeric(as.character(x)))
# Percentage of baskets assisted
all_seasons <- all_seasons %>%
mutate(AST_perc = round(AST / FG,3)*100)
# Since merger
post_merger <- all_seasons[all_seasons$Season > 1976,]
post_merger <- post_merger %>% arrange(Team,Season)
# Win percentage
post_merger$w_perc <- (post_merger$W / (post_merger$W + post_merger$L))*100
# AST percentage
mod <- lme(w_perc ~ AST_perc + Age + Ht. + Wt. + STL + BLK + TOV + PTS + FGP,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
summary(mod)
mod <- lme(w_perc ~ AST_perc + Age + STL + BLK + TOV + PTS + FGP,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
vif(mod)
summary(mod)
mod <- lme(w_perc ~ AST_perc + Age + STL + BLK + TOV + PTS,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
vif(mod)
summary(mod)
+ FGP
mod <- lme(w_perc ~ AST_perc + Age + STL + BLK + TOV + PTS + FGP,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
summary(mod)
vif(mod)
stepAIC(mod)
summary(mod)
mod <- lme(w_perc ~ AST_perc + Age + STL + BLK + TOV + PTS,
random = ~1|Team,data = post_merger,correlation = corAR1(),method = "ML")
summary(mod)
