theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Percentage of Baskets Assisted Per Team") +
scale_color_manual(values = c(team_colors[["GSW"]][1],team_colors[["UTA"]][1])) +
facet_wrap(~Team) +
theme(legend.position = "none")
uta_gsw_plot
# Loess
ast_perc_loess <-
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_smooth(aes(color = Team),se = F) + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Percentage of Baskets Assisted Per Team, Loess Smoothing") +
scale_color_manual(values = primary_colors)
ast_perc_loess
# Facet Loess
ast_perc_loess +
facet_wrap(~Team) +
theme(legend.position = "none")
# Loess overall trend
ast_perc_loess_overall <-
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`)) +
geom_smooth() + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Percentage of Baskets Assisted League-Wide, Loess Smoothing")
ast_perc_loess_overall
passing_mod <- lme(Passes.Made ~ poly(Season,3) + Min, random = ~1|Team,
data = passing)
passing_mod <- lme(Passes.Made ~ poly(Season,3) + Min, random = ~1|Team,
data = passing)
passing_mod <- lme(Passes.Made ~ Season + Min, random = ~1|Team,
data = passing)
passing_mod <- lme(Passes.Made ~ poly(Season) + Min, random = ~1|Team,
data = passing)
passing_mod <- lme(Passes.Made ~ poly(Season,3) + Min, random = ~1|Team,
data = passing)
View(passing)
typeof(passing$Season)
typeof(passing$Min)
lme(data = passing,Passes.Made ~ Season + Min,random = ~1|ID)
lme(data = passing,Passes.Made ~ Season + Min,random = ~1|Team)
lme(data = passing,Passes.Made ~ poly(Season,3) + Min,random = ~1|Team)
# Convert column types - passing
numcols <- c("Season","Passes.Made","Min")
passing[,numcols] <- lapply(passing[,numcols],
function(x) as.numeric(as.character(x)))
# Read in passing CSV
passing <- read.csv("./Data/passing_data.csv")
# Convert column types - passing
passing$Season <- sub("-.*","",passing$Season)
numcols <- c("Season","Passes.Made","Min")
passing[,numcols] <- lapply(passing[,numcols],
function(x) as.numeric(as.character(x)))
passing_mod <- lme(Passes.Made ~ poly(Season,3) + Min, random = ~1|Team,
data = passing)
kable(summary(passing_mod_ar1)$tTable)
# Raw assist number plot
pass_plot <-
ggplot(passing,aes(x = Season,y = Passes.Made,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
scale_color_manual(values = primary_colors)
pass_plot
# Raw assist number plot
pass_plot <-
ggplot(passing,aes(x = Season,y = Passes.Made,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
scale_color_manual(values = primary_colors)
# Raw assist number plot
pass_plot <-
ggplot(passing,aes(x = Season,y = Passes.Made,group = Team)) +
geom_line(aes(color = Team)) + theme_bw()
pass_plot
# Read in passing CSV
passing <- read.csv("./Data/passing_data.csv")
# Season to starting year
all_seasons$Season <- sub("-.*","",all_seasons$Season)
# Convert column types - all seasons
numcols <- c("Season","AST","FG","FGA","FG%","3P","3PA","3P%","STL",
"BLK","TOV","PF","PTS")
all_seasons[,numcols] <- lapply(all_seasons[,numcols],
function(x) as.numeric(as.character(x)))
# Convert column types - passing
passing$Season <- sub("-.*","",passing$Season)
numcols <- c("Season","Passes.Made","Min")
passing[,numcols] <- lapply(passing[,numcols],
function(x) as.numeric(as.character(x)))
View(passing)
# Raw assist number plot
pass_plot <-
ggplot(passing,aes(x = Season,y = Passes.Made,group = Team)) +
geom_line(aes(color = Team)) + theme_bw()
pass_plot
# Raw assist number plot
pass_plot <-
ggplot(passing,aes(x = Season,y = Passes.Made,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
scale_color_manual(values = primary_colors)
pass_plot
passing_mod <- lme(Passes.Made ~ Season + Min, random = ~1|Team,
data = passing)
passing_mod_ar1 <- lme(Passes.Made ~ Season + Min, random = ~1|Team,
data = passing,correlation = corAR1())
kable(AIC(passing_mod,passing_mod_ar1))
plot(passing_mod,main = "Random Intercept Only, Standardized Residuals")
plot(passing$Season,resid(passing_mod),xlab = "Season",
ylab = "Residuals",main = "Random Intercept Only, Residuals by Season")
plot(passing_mod_ar1,main = "Random Intercept and AR(1), Standardized Residuals")
plot(passing$Season,resid(passing_mod_ar1),xlab = "Season",
ylab = "Residuals",main = "Random Intercept and AR(1), Residuals by Season")
passing_mod <- lme(Passes.Made ~ Season, random = ~1|Team,
data = passing)
passing_mod_ar1 <- lme(Passes.Made ~ Season, random = ~1|Team,
data = passing,correlation = corAR1())
kable(AIC(passing_mod,passing_mod_ar1))
plot(passing_mod,main = "Random Intercept Only, Standardized Residuals")
plot(passing$Season,resid(passing_mod),xlab = "Season",
ylab = "Residuals",main = "Random Intercept Only, Residuals by Season")
plot(passing_mod_ar1,main = "Random Intercept and AR(1), Standardized Residuals")
plot(passing$Season,resid(passing_mod_ar1),xlab = "Season",
ylab = "Residuals",main = "Random Intercept and AR(1), Residuals by Season")
passing_mod_2 <- lme(Passes.Made ~ Season + Min, random = ~1|Team,
data = passing)
AIC(passing_mod)
AIC(passing_mod,passing_mod_2)
passing$Team
passing_mod <- lme(Passes.Made ~ Season, random = ~1|Team,
data = passing)
passing_mod_2 <- lme(Passes.Made ~ Season + Min, random = ~1|Team,
data = passing)
AIC(passing_mod,passing_mod_2)
is.na(passing)
any(is.na(passing))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/timvigers/Documents/GitHub/School/Analysis of Longitudinal Data/Final Project")
library(rvest)
library(tableone)
library(lme4)
library(nlme)
library(skimr)
library(knitr)
library(tidyverse)
# Get data from basketball reference
source("./Code/scrape.R")
# Read in passing CSV
passing <- read.csv("./Data/passing_data.csv")
# Colors
source("./Code/colors.R")
# Season to starting year
all_seasons$Season <- sub("-.*","",all_seasons$Season)
# Convert column types - all seasons
numcols <- c("Season","AST","FG","FGA","FG%","3P","3PA","3P%","STL",
"BLK","TOV","PF","PTS")
all_seasons[,numcols] <- lapply(all_seasons[,numcols],
function(x) as.numeric(as.character(x)))
# Convert column types - passing
passing$Season <- sub("-.*","",passing$Season)
numcols <- c("Season","Passes.Made","Min")
passing[,numcols] <- lapply(passing[,numcols],
function(x) as.numeric(as.character(x)))
t1 <- CreateTableOne(vars = c("W","Passes.Made","Passes.Received","Ast",
"Secondary.Ast","Potential.Ast","Ast.Pts.Created"),
strata = "Team",data = passing)
t1 <- t(as.data.frame(print(t1,printToggle = FALSE)))
t1 <- t1[-c(nrow(t1),nrow(t1)-1),-c(1)]
kable(t1)
t1 <- CreateTableOne(vars = c("FG","FGA","FG%","3P","3PA","3P%","AST","STL",
"BLK","TOV","PF","PTS"),
strata = "Team",data = all_seasons)
t1 <- t(as.data.frame(print(t1,printToggle = FALSE)))
t1 <- t1[-c(nrow(t1),nrow(t1)-1),-c(1)]
kable(t1)
# Raw assist number plot
pass_plot <-
ggplot(passing,aes(x = Season,y = Passes.Made,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
scale_color_manual(values = primary_colors)
pass_plot
# Raw assist number plot
ast_plot <-
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = AST,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
scale_color_manual(values = primary_colors)
ast_plot
# Percentage of baskets assisted
all_seasons <- all_seasons %>%
mutate(`AST%` = round(AST / FG,3)*100)
# Plot assist percentage by year and team
# All together
ast_perc_plot <-
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Percentage of Baskets Assisted Per Team") +
scale_color_manual(values = primary_colors)
ast_perc_plot
# Facet wrap
ast_perc_plot +
facet_wrap(~Team) +
theme(legend.position = "none")
# All together
uta_gsw_plot <-
ggplot(all_seasons[all_seasons$Season > 1976 & all_seasons$Team %in% c("GSW","UTA"),],
aes(x = Season,y = `AST%`,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Percentage of Baskets Assisted Per Team") +
scale_color_manual(values = c(team_colors[["GSW"]][1],team_colors[["UTA"]][1])) +
facet_wrap(~Team) +
theme(legend.position = "none")
uta_gsw_plot
# Loess
ast_perc_loess <-
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`,group = Team)) +
geom_smooth(aes(color = Team),se = F) + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Percentage of Baskets Assisted Per Team, Loess Smoothing") +
scale_color_manual(values = primary_colors)
ast_perc_loess
# Facet Loess
ast_perc_loess +
facet_wrap(~Team) +
theme(legend.position = "none")
# Loess overall trend
ast_perc_loess_overall <-
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = `AST%`)) +
geom_smooth() + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Percentage of Baskets Assisted League-Wide, Loess Smoothing")
ast_perc_loess_overall
passing_mod <- lme(Passes.Made ~ Season, random = ~1|Team,
data = passing)
passing_mod_2 <- lme(Passes.Made ~ Season + Min, random = ~1|Team,
data = passing)
AIC(passing_mod,passing_mod_2)
passing_mod <- lme(Passes.Made ~ Season, random = ~1|Team,
data = passing,method = "ML")
passing_mod_2 <- lme(Passes.Made ~ Season + Min, random = ~1|Team,
data = passing,method = "ML")
AIC(passing_mod,passing_mod_2)
passing_mod <- lme(Passes.Made ~ Min, random = ~1|Team,
data = passing,method = "ML")
summary(passing_mod)
# Raw assist number plot
pass_plot <-
ggplot(passing,aes(x = Min,y = Passes.Made,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
scale_color_manual(values = primary_colors)
pass_plot
passing_mod <- lme(Passes.Made ~ Season, random = ~1|Team,
data = passing,method = "ML")
passing_mod_ar1 <- lme(Passes.Made ~ Season, random = ~1|Team,
data = passing,correlation = corAR1())
kable(AIC(passing_mod,passing_mod_ar1))
passing_mod_ar1 <- lme(Passes.Made ~ Season, random = ~1|Team,
data = passing,correlation = corAR1(),,method = "ML")
kable(AIC(passing_mod,passing_mod_ar1))
plot(passing_mod,main = "Random Intercept Only, Standardized Residuals")
plot(passing$Season,resid(passing_mod),xlab = "Season",
ylab = "Residuals",main = "Random Intercept Only, Residuals by Season")
plot(passing_mod_ar1,main = "Random Intercept and AR(1), Standardized Residuals")
plot(passing$Season,resid(passing_mod_ar1),xlab = "Season",
ylab = "Residuals",main = "Random Intercept and AR(1), Residuals by Season")
passing_loess <- loess(Passes.Made ~ Season + Min, data = passing, span = 0.28)
passing_loess <- loess(Passes.Made ~ Season, data = passing, span = 0.28)
passing_loess <- loess(Passes.Made ~ Season, data = passing, span = 0.3)
passing_loess <- loess(Passes.Made ~ Season, data = passing, span = 0.4)
passing_loess <- loess(Passes.Made ~ Season, data = passing, span = 0.5)
passing_loess <- loess(Passes.Made ~ Season, data = passing, span = 0.6)
passing_loess <- loess(Passes.Made ~ Season, data = passing, span = 0.51)
passing_loess <- loess(Passes.Made ~ Season, data = passing, span = 0.5)
passing_loess <- loess(Passes.Made ~ Season, data = passing, span = 0.51)
plot(passing$Season,resid(passing_loess),xlab = "Season",
ylab = "Residuals",main = "Loess Residuals by Season")
kable(summary(passing_mod_ar1)$tTable)
passing_mod_ar1 <- lme(Passes.Made ~ Season, random = ~1|Team,
data = passing,correlation = corAR1(),method = "ML")
passing_mod <- lme(Passes.Made ~ Season, random = ~1|Team,
data = passing)
kable(summary(passing_mod_ar1)$tTable)
passing_mod_ar1_poly <- lme(Passes.Made ~ poly(Season,4), random = ~1|Team,
data = passing,correlation = corAR1())
broom::tidy(passing_mod)
broom::tidy(passing_mod,"fixed")
passing_mod_ar1 <- lme(Passes.Made ~ Season, random = ~1|Team,
data = passing,correlation = corAR1())
kable(broom::tidy(passing_mod_ar1,"fixed"))
broom::tidy(passing_mod_ar1,"fixed")
results <- broom::tidy(passing_mod_ar1,"fixed")
View(results)
kable(round(results,2))
passing_mod_ar1_poly <- lme(Passes.Made ~ poly(Season,4), random = ~1|Team,
data = passing,correlation = corAR1())
kable(broom::tidy(passing_mod_ar1_poly,"fixed"))
all_seasons$Season
ast_mod <- lme(`AST%` ~ Season, random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,], method = "ML")
all_seasons[all_seasons$Season > 1976,]
str(all_seasons)
ast_mod <- lme(AST% ~ Season, random = ~1|Team,
ast_mod <- lme(AST_perc ~ Season, random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,], method = "ML")
ast_mod <- lme(AST_perc ~ Season, random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,], method = "ML")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/timvigers/Documents/GitHub/School/Analysis of Longitudinal Data/Final Project")
library(rvest)
library(tableone)
library(lme4)
library(nlme)
library(skimr)
library(knitr)
library(tidyverse)
# Get data from basketball reference
source("./Code/scrape.R")
# Read in passing CSV
passing <- read.csv("./Data/passing_data.csv")
# Colors
source("./Code/colors.R")
# Season to starting year
all_seasons$Season <- sub("-.*","",all_seasons$Season)
# Convert column types - all seasons
numcols <- c("Season","AST","FG","FGA","FG%","3P","3PA","3P%","STL",
"BLK","TOV","PF","PTS")
all_seasons[,numcols] <- lapply(all_seasons[,numcols],
function(x) as.numeric(as.character(x)))
# Convert column types - passing
passing$Season <- sub("-.*","",passing$Season)
numcols <- c("Season","Passes.Made","Min")
passing[,numcols] <- lapply(passing[,numcols],
function(x) as.numeric(as.character(x)))
t1 <- CreateTableOne(vars = c("W","Passes.Made","Passes.Received","Ast",
"Secondary.Ast","Potential.Ast","Ast.Pts.Created"),
strata = "Team",data = passing)
t1 <- t(as.data.frame(print(t1,printToggle = FALSE)))
t1 <- t1[-c(nrow(t1),nrow(t1)-1),-c(1)]
kable(t1)
t1 <- CreateTableOne(vars = c("FG","FGA","FG%","3P","3PA","3P%","AST","STL",
"BLK","TOV","PF","PTS"),
strata = "Team",data = all_seasons)
t1 <- t(as.data.frame(print(t1,printToggle = FALSE)))
t1 <- t1[-c(nrow(t1),nrow(t1)-1),-c(1)]
kable(t1)
# Raw assist number plot
pass_plot <-
ggplot(passing,aes(x = Season,y = Passes.Made,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
scale_color_manual(values = primary_colors)
pass_plot
# Raw assist number plot
ast_plot <-
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = AST,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
scale_color_manual(values = primary_colors)
ast_plot
# Percentage of baskets assisted
all_seasons <- all_seasons %>%
mutate(AST_perc = round(AST / FG,3)*100)
# Plot assist percentage by year and team
# All together
ast_perc_plot <-
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = AST_perc,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Percentage of Baskets Assisted Per Team") +
scale_color_manual(values = primary_colors)
ast_perc_plot
# Facet wrap
ast_perc_plot +
facet_wrap(~Team) +
theme(legend.position = "none")
# All together
uta_gsw_plot <-
ggplot(all_seasons[all_seasons$Season > 1976 & all_seasons$Team %in% c("GSW","UTA"),],
aes(x = Season,y = AST_perc,group = Team)) +
geom_line(aes(color = Team)) + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Percentage of Baskets Assisted Per Team") +
scale_color_manual(values = c(team_colors[["GSW"]][1],team_colors[["UTA"]][1])) +
facet_wrap(~Team) +
theme(legend.position = "none")
uta_gsw_plot
# Loess
ast_perc_loess <-
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = AST_perc,group = Team)) +
geom_smooth(aes(color = Team),se = F) + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Percentage of Baskets Assisted Per Team, Loess Smoothing") +
scale_color_manual(values = primary_colors)
ast_perc_loess
# Facet Loess
ast_perc_loess +
facet_wrap(~Team) +
theme(legend.position = "none")
# Loess overall trend
ast_perc_loess_overall <-
ggplot(all_seasons[all_seasons$Season > 1976,],aes(x = Season,y = AST_perc)) +
geom_smooth() + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Percentage of Baskets Assisted League-Wide, Loess Smoothing")
ast_perc_loess_overall
passing_mod <- lme(Passes.Made ~ Season, random = ~1|Team,
data = passing,method = "ML")
passing_mod_ar1 <- lme(Passes.Made ~ Season, random = ~1|Team,
data = passing,correlation = corAR1(),method = "ML")
kable(AIC(passing_mod,passing_mod_ar1))
plot(passing_mod,main = "Random Intercept Only, Standardized Residuals")
plot(passing$Season,resid(passing_mod),xlab = "Season",
ylab = "Residuals",main = "Random Intercept Only, Residuals by Season")
plot(passing_mod_ar1,main = "Random Intercept and AR(1), Standardized Residuals")
plot(passing$Season,resid(passing_mod_ar1),xlab = "Season",
ylab = "Residuals",main = "Random Intercept and AR(1), Residuals by Season")
passing_loess <- loess(Passes.Made ~ Season, data = passing, span = 0.51)
plot(passing$Season,resid(passing_loess),xlab = "Season",
ylab = "Residuals",main = "Loess Residuals by Season")
passing_mod_ar1 <- lme(Passes.Made ~ Season, random = ~1|Team,
data = passing,correlation = corAR1())
kable(broom::tidy(passing_mod_ar1,"fixed"))
passing_mod_ar1_poly <- lme(Passes.Made ~ poly(Season,4), random = ~1|Team,
data = passing,correlation = corAR1())
kable(broom::tidy(passing_mod_ar1_poly,"fixed"))
ast_mod <- lme(AST_perc ~ Season, random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,], method = "ML")
ast_mod_ar1 <- lme(AST_perc ~ Season, random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,],
method = "ML",correlation = corAR1())
kable(AIC(ast_mod,ast_mod_ar1))
plot(ast_mod,main = "Random Intercept Only, Standardized Residuals")
plot(all_seasons[all_seasons$Season > 1976,"Season"],resid(ast_mod),xlab = "Season",
ylab = "Residuals",main = "Random Intercept Only, Residuals by Season")
plot(ast_mod_ar1,main = "Random Intercept and AR(1), Standardized Residuals")
plot(all_seasons[all_seasons$Season > 1976,"Season"],resid(ast_mod_ar1),xlab = "Season",
ylab = "Residuals",main = "Random Intercept and AR(1), Residuals by Season")
ast_mod <- lme(AST_perc ~ poly(Season,4), random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,], method = "ML")
ast_mod_ar1 <- lme(AST_perc ~ poly(Season,4), random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,],
method = "ML",correlation = corAR1())
kable(AIC(ast_mod,ast_mod_ar1))
plot(ast_mod,main = "Random Intercept Only, Standardized Residuals")
plot(all_seasons[all_seasons$Season > 1976,"Season"],resid(ast_mod),xlab = "Season",
ylab = "Residuals",main = "Random Intercept Only, Residuals by Season")
plot(ast_mod_ar1,main = "Random Intercept and AR(1), Standardized Residuals")
plot(all_seasons[all_seasons$Season > 1976,"Season"],resid(ast_mod_ar1),xlab = "Season",
ylab = "Residuals",main = "Random Intercept and AR(1), Residuals by Season")
broom::tidy(ast_mod_ar1,"fixed")
ast_mod_car1 <- lme(AST_perc ~ Season, random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,],
method = "ML",correlation = corCAR1())
kable(AIC(ast_mod,ast_mod_ar1,ast_mod_car1))
AIC(ast_mod,ast_mod_ar1,ast_mod_car1)
plot(ast_mod,main = "Random Intercept Only, Standardized Residuals")
plot(all_seasons[all_seasons$Season > 1976,"Season"],resid(ast_mod),xlab = "Season",
ylab = "Residuals",main = "Random Intercept Only, Residuals by Season")
plot(ast_mod_ar1,main = "Random Intercept and AR(1), Standardized Residuals")
plot(all_seasons[all_seasons$Season > 1976,"Season"],resid(ast_mod_ar1),xlab = "Season",
ylab = "Residuals",main = "Random Intercept and AR(1), Residuals by Season")
ast_mod_ar1_poly <- lme(AST_perc ~ poly(Season,4), random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,],
method = "ML",correlation = corAR1())
kable(AIC(ast_mod_ar1,ast_mod_ar1_poly))
ast_mod_ar1 <- lme(AST_perc ~ Season, random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,],
method = "ML",correlation = corAR1())
ast_mod_ar1_poly <- lme(AST_perc ~ poly(Season,4), random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,],
method = "ML",correlation = corAR1())
kable(AIC(ast_mod_ar1,ast_mod_ar1_poly))
ast_mod <- lme(AST_perc ~ Season, random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,], method = "ML")
ast_mod_ar1 <- lme(AST_perc ~ Season, random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,],
method = "ML",correlation = corAR1())
ast_mod_car1 <- lme(AST_perc ~ Season, random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,],
method = "ML",correlation = corCAR1())
kable(AIC(ast_mod,ast_mod_ar1,ast_mod_car1))
plot(ast_mod_ar1_poly,main = "Random Intercept and AR(1), Polynomial Model Standardized Residuals")
ast_mod_ar1_poly <- lme(AST_perc ~ poly(Season,4), random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,],
correlation = corAR1())
kable(broom::tidy(ast_mod_ar1_poly,"fixed"))
ast_mod_ar1_poly <- lme(AST_perc ~ poly(Season,5), random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,],
correlation = corAR1())
kable(broom::tidy(ast_mod_ar1_poly,"fixed"))
ast_mod_ar1_poly <- lme(AST_perc ~ poly(Season,4), random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,],
correlation = corAR1())
kable(broom::tidy(ast_mod_ar1_poly,"fixed"))
View(all_seasons)
ast_mod <- lme(AST_perc ~ Season, random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,], method = "ML")
ast_mod_ar1 <- lme(AST_perc ~ Season, random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,],
method = "ML",correlation = corAR1())
ast_mod_car1 <- lme(AST_perc ~ Season, random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,],
method = "ML",correlation = corCAR1())
kable(AIC(ast_mod,ast_mod_ar1,ast_mod_car1))
plot(ast_mod,main = "Random Intercept Only, Standardized Residuals")
plot(all_seasons[all_seasons$Season > 1976,"Season"],resid(ast_mod),xlab = "Season",
ylab = "Residuals",main = "Random Intercept Only, Residuals by Season")
plot(ast_mod_ar1,main = "Random Intercept and AR(1), Standardized Residuals")
plot(all_seasons[all_seasons$Season > 1976,"Season"],resid(ast_mod_ar1),xlab = "Season",
ylab = "Residuals",main = "Random Intercept and AR(1), Residuals by Season")
ast_mod_ar1_poly <- lme(AST_perc ~ poly(Season,4), random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,],
method = "ML",correlation = corAR1())
kable(AIC(ast_mod_ar1,ast_mod_ar1_poly))
ast_mod_ar1_poly <- lme(AST_perc ~ poly(Season,4), random = ~1|Team,
data = all_seasons[all_seasons$Season > 1976,],
correlation = corAR1())
kable(broom::tidy(ast_mod_ar1_poly,"fixed"))
